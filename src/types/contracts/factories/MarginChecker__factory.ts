/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MarginChecker, MarginCheckerInterface } from "../MarginChecker";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ONE_MILLION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "_position",
        type: "tuple",
        internalType: "struct MarginPosition",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "marginAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "marginTotal",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "borrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rawBorrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rateCumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "hook",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "liquidated",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "borrowAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "positionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "liquidated",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "borrowAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "positionIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "liquidatedList",
        type: "bool[]",
        internalType: "bool[]",
      },
      {
        name: "borrowAmountList",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "marginForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "hook",
        type: "address",
        internalType: "address",
      },
      {
        name: "inPositions",
        type: "tuple[]",
        internalType: "struct MarginPosition[]",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "marginAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "marginTotal",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "borrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rawBorrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rateCumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatedList",
        type: "bool[]",
        internalType: "bool[]",
      },
      {
        name: "borrowAmountList",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLeverageParts",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint24[]",
        internalType: "uint24[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLiquidateMillion",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMaxDecrease",
    inputs: [
      {
        name: "_position",
        type: "tuple",
        internalType: "struct MarginPosition",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "marginAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "marginTotal",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "borrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rawBorrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rateCumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "hook",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "maxAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getReserves",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "marginForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "hook",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "reserveBorrow",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserveMargin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setLeverageParts",
    inputs: [
      {
        name: "_leverageParts",
        type: "uint24[]",
        internalType: "uint24[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLiquidateMillion",
    inputs: [
      {
        name: "_liquidateMillion",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x5f805462ffffff60a01b191661027160a41b17905561012060405261017c608090815260c860a052606460c052602860e0526009610100526100459060019060056100be565b50348015610051575f80fd5b506040516118d73803806118d78339810160408190526100709161017a565b5f80546001600160a01b0319166001600160a01b03831690811782556040518392907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350506101a7565b828054828255905f5260205f2090600901600a90048101928215610156579160200282015f5b8382111561012557835183826101000a81548162ffffff021916908361ffff16021790555092602001926003016020816002010492830192600103026100e4565b80156101545782816101000a81549062ffffff0219169055600301602081600201049283019260010302610125565b505b50610162929150610166565b5090565b5b80821115610162575f8155600101610167565b5f6020828403121561018a575f80fd5b81516001600160a01b03811681146101a0575f80fd5b9392505050565b611723806101b45f395ff3fe608060405234801561000f575f80fd5b50600436106100e5575f3560e01c8063a2a5324811610088578063e9976dc611610063578063e9976dc614610219578063eac5fdde1461022e578063eedd58f314610241578063f2fde38b14610263575f80fd5b8063a2a53248146101d2578063d8388c54146101e5578063de2a0946146101f8575f80fd5b806365f62b3b116100c357806365f62b3b146101535780638da5cb5b1461017b5780639869b736146101a55780639f1eb3b6146101bd575f80fd5b80630361d3fa146100e95780630364d05d1461011657806307146edd14610140575b5f80fd5b6101016100f7366004610fe5565b6001949350505050565b60405190151581526020015b60405180910390f35b610129610124366004611192565b610276565b60408051921515835260208301919091520161010d565b61012961014e3660046111c9565b6104e8565b6101666101613660046111f3565b6105ca565b6040805192835260208301919091520161010d565b5f5461018d906001600160a01b031681565b6040516001600160a01b03909116815260200161010d565b6101af620f424081565b60405190815260200161010d565b6101d06101cb366004611242565b610791565b005b6101af6101e0366004611192565b6107e6565b6101d06101f33660046112a4565b610955565b61020b6102063660046112e2565b61098f565b60405161010d929190611332565b610221610a91565b60405161010d91906113b4565b61020b61023c3660046113fb565b610b10565b5f54600160a01b900462ffffff1660405162ffffff909116815260200161010d565b6101d06102713660046114dd565b610e99565b5f805f84608001516001600160801b031611156104e15750608083015160c08401516001600160801b03909116908390156103ab575f816001600160a01b03166313ac42a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030c91906114f8565b8651602088015160405163ad9fccf160e01b81526001600160a01b0389811660048301526024820193909352901515604482015291169063ad9fccf190606401602060405180830381865afa158015610367573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061038b9190611513565b60c087015190915061039d828561153e565b6103a7919061155b565b9250505b5f806103bf875f01518860200151886105ca565b90925090505f826103d0868461153e565b6103da919061155b565b90505f846001600160a01b03166313ac42a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610419573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061043d91906114f8565b6001600160a01b031663707344c76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610478573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061049c919061157a565b9050620f42406104b162ffffff83168461153e565b6104bb919061155b565b89606001518a604001516104cf9190611595565b6001600160801b031610965050505050505b9250929050565b60405163eb02c30160e01b8152600481018290525f908190849082906001600160a01b0383169063eb02c3019060240160e060405180830381865afa158015610533573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055791906115bf565b90506105bd81836001600160a01b031663b55bd84d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610599573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061012491906114f8565b9350935050509250929050565b5f805f836001600160a01b0316639ae5668c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610609573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061062d91906114f8565b90506001600160a01b0381166106c7576040516314953d3160e31b8152600481018790525f9081906001600160a01b0387169063a4a9e988906024016040805180830381865afa158015610683573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a79190611647565b91509150866106b75780826106ba565b81815b9095509350610788915050565b60405163bd0b98ed60e01b8152600481018790526001600160a01b0385811660248301525f919083169063bd0b98ed906044016040805180830381865afa158015610714573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107389190611669565b5090508561075d576001600160e01b038116607082901c6001600160701b0316610776565b607081901c6001600160701b03166001600160e01b0382165b6001600160701b039182169550169250505b50935093915050565b5f546001600160a01b031633146107c35760405162461bcd60e51b81526004016107ba906116a0565b60405180910390fd5b5f805462ffffff909216600160a01b0262ffffff60a01b19909216919091179055565b81516040516314953d3160e31b81525f91829182916001600160a01b0386169163a4a9e9889161081c9160040190815260200190565b6040805180830381865afa158015610836573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061085a9190611647565b915091505f808660200151610870578284610873565b83835b915091505f8288608001516001600160801b031683610892919061153e565b61089c919061155b565b905087606001516001600160801b031681111561091f575f61032089606001516001600160801b0316836108d091906116c6565b6108dc906103e861153e565b6108e6919061155b565b905088604001516001600160801b0316811015610919578089604001516001600160801b031661091691906116c6565b96505b5061094a565b6103e888604001516001600160801b031661032061093d919061153e565b610947919061155b565b95505b505050505092915050565b5f546001600160a01b0316331461097e5760405162461bcd60e51b81526004016107ba906116a0565b61098a60018383610f0c565b505050565b606080826001600160401b038111156109aa576109aa611068565b6040519080825280602002602001820160405280156109d3578160200160208202803683370190505b509150826001600160401b038111156109ee576109ee611068565b604051908082528060200260200182016040528015610a17578160200160208202803683370190505b5090505f5b83811015610788575f858583818110610a3757610a376116d9565b905060200201359050610a4a87826104e8565b858481518110610a5c57610a5c6116d9565b60200260200101858581518110610a7557610a756116d9565b6020908102919091010191909152901515905250600101610a1c565b60606001805480602002602001604051908101604052809291908181526020018280548015610b0657602002820191905f5260205f20905f905b82829054906101000a900462ffffff1662ffffff1681526020019060030190602082600201049283019260010382029150808411610acb5790505b5050505050905090565b606080835f80610b218989856105ca565b915091505f836001600160a01b03166313ac42a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b62573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b8691906114f8565b6001600160a01b031663707344c76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be5919061157a565b90505f846001600160a01b03166313ac42a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c24573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c4891906114f8565b60405163ad9fccf160e01b81526001600160a01b038b81166004830152602482018e90528c15156044830152919091169063ad9fccf190606401602060405180830381865afa158015610c9d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc19190611513565b88519091508b906001600160401b03811115610cdf57610cdf611068565b604051908082528060200260200182016040528015610d08578160200160208202803683370190505b50975088516001600160401b03811115610d2457610d24611068565b604051908082528060200260200182016040528015610d4d578160200160208202803683370190505b5096505f5b8951811015610e89575f8a8281518110610d6e57610d6e6116d9565b6020026020010151905082815f0151148015610d9157508c151581602001511515145b15610e805760808101516001600160801b031615610e80575f81608001516001600160801b031690505f82606001518360400151610dcf9190611595565b6001600160801b031690505f8360c001511115610e025760c0830151610df5878461153e565b610dff919061155b565b91505b5f89610e0e848b61153e565b610e18919061155b565b9050620f4240610e2d62ffffff8a168361153e565b610e37919061155b565b82108d8681518110610e4b57610e4b6116d9565b602002602001019015159081151581525050828c8681518110610e7057610e706116d9565b6020026020010181815250505050505b50600101610d52565b5050505050505094509492505050565b5f546001600160a01b03163314610ec25760405162461bcd60e51b81526004016107ba906116a0565b5f80546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b828054828255905f5260205f2090600901600a90048101928215610faa579160200282015f5b83821115610f7957833562ffffff1683826101000a81548162ffffff021916908362ffffff1602179055509260200192600301602081600201049283019260010302610f32565b8015610fa85782816101000a81549062ffffff0219169055600301602081600201049283019260010302610f79565b505b50610fb6929150610fba565b5090565b5b80821115610fb6575f8155600101610fbb565b6001600160a01b0381168114610fe2575f80fd5b50565b5f805f8060608587031215610ff8575f80fd5b843561100381610fce565b93506020850135925060408501356001600160401b03811115611024575f80fd5b8501601f81018713611034575f80fd5b80356001600160401b03811115611049575f80fd5b87602082840101111561105a575f80fd5b949793965060200194505050565b634e487b7160e01b5f52604160045260245ffd5b60405160e081016001600160401b038111828210171561109e5761109e611068565b60405290565b604051601f8201601f191681016001600160401b03811182821017156110cc576110cc611068565b604052919050565b8015158114610fe2575f80fd5b6001600160801b0381168114610fe2575f80fd5b8035611100816110e1565b919050565b5f60e08284031215611115575f80fd5b61111d61107c565b8235815290506020820135611131816110d4565b60208201526040820135611144816110e1565b60408201526060820135611157816110e1565b6060820152608082013561116a816110e1565b608082015261117b60a083016110f5565b60a082015260c09182013591810191909152919050565b5f8061010083850312156111a4575f80fd5b6111ae8484611105565b915060e08301356111be81610fce565b809150509250929050565b5f80604083850312156111da575f80fd5b82356111e581610fce565b946020939093013593505050565b5f805f60608486031215611205575f80fd5b833592506020840135611217816110d4565b9150604084013561122781610fce565b809150509250925092565b62ffffff81168114610fe2575f80fd5b5f60208284031215611252575f80fd5b813561125d81611232565b9392505050565b5f8083601f840112611274575f80fd5b5081356001600160401b0381111561128a575f80fd5b6020830191508360208260051b85010111156104e1575f80fd5b5f80602083850312156112b5575f80fd5b82356001600160401b038111156112ca575f80fd5b6112d685828601611264565b90969095509350505050565b5f805f604084860312156112f4575f80fd5b83356112ff81610fce565b925060208401356001600160401b03811115611319575f80fd5b61132586828701611264565b9497909650939450505050565b604080825283519082018190525f9060208501906060840190835b8181101561136d578351151583526020938401939092019160010161134d565b5050838103602080860191909152855180835291810192508501905f5b818110156113a857825184526020938401939092019160010161138a565b50919695505050505050565b602080825282518282018190525f918401906040840190835b818110156113f057835162ffffff168352602093840193909201916001016113cd565b509095945050505050565b5f805f806080858703121561140e575f80fd5b843593506020850135611420816110d4565b9250604085013561143081610fce565b915060608501356001600160401b0381111561144a575f80fd5b8501601f8101871361145a575f80fd5b80356001600160401b0381111561147357611473611068565b61148260208260051b016110a4565b80828252602082019150602060e084028501019250898311156114a3575f80fd5b6020840193505b828410156114cf576114bc8a85611105565b825260208201915060e0840193506114aa565b969995985093965050505050565b5f602082840312156114ed575f80fd5b813561125d81610fce565b5f60208284031215611508575f80fd5b815161125d81610fce565b5f60208284031215611523575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176115555761155561152a565b92915050565b5f8261157557634e487b7160e01b5f52601260045260245ffd5b500490565b5f6020828403121561158a575f80fd5b815161125d81611232565b6001600160801b0381811683821601908111156115555761155561152a565b8051611100816110e1565b5f60e08284031280156115d0575f80fd5b506115d961107c565b8251815260208301516115eb816110d4565b60208201526115fc604084016115b4565b604082015261160d606084016115b4565b606082015261161e608084016115b4565b608082015261162f60a084016115b4565b60a082015260c0928301519281019290925250919050565b5f8060408385031215611658575f80fd5b505080516020909101519092909150565b5f806040838503121561167a575f80fd5b82516001600160e01b0381168114611690575f80fd5b6020939093015192949293505050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b818103818111156115555761155561152a565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220450d70c2956c744786d49c42f795b5854755368625309a6575954f4eda3abefb64736f6c634300081a0033";

type MarginCheckerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarginCheckerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarginChecker__factory extends ContractFactory {
  constructor(...args: MarginCheckerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MarginChecker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MarginChecker__factory {
    return super.connect(runner) as MarginChecker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarginCheckerInterface {
    return new Interface(_abi) as MarginCheckerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MarginChecker {
    return new Contract(address, _abi, runner) as unknown as MarginChecker;
  }
}
