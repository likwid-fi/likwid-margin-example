/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MarginChecker, MarginCheckerInterface } from "../MarginChecker";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "positionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "liquidated",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "borrowAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "poolManager",
        type: "address",
        internalType: "contract IPairMarginManager",
      },
      {
        name: "_status",
        type: "tuple",
        internalType: "struct PoolStatus",
        components: [
          {
            name: "blockTimestampLast",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "realReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "realReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "marginFee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "lendingRealReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingRealReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "rate0CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rate1CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
        ],
      },
      {
        name: "_position",
        type: "tuple",
        internalType: "struct MarginPosition",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "marginAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "marginTotal",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "borrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rawBorrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rateCumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidated",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "borrowAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "positionIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "liquidatedList",
        type: "bool[]",
        internalType: "bool[]",
      },
      {
        name: "borrowAmountList",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkMinMarginLevel",
    inputs: [
      {
        name: "_status",
        type: "tuple",
        internalType: "struct PoolStatus",
        components: [
          {
            name: "blockTimestampLast",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "realReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "realReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "marginFee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "lendingRealReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingRealReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "rate0CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rate1CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
        ],
      },
      {
        name: "marginForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "leverage",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "assetsAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "debtAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "valid",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkValidity",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "estimatePNL",
    inputs: [
      {
        name: "positionManager",
        type: "address",
        internalType: "contract IMarginPositionManager",
      },
      {
        name: "positionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "closeMillionth",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "pnlAmount",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLiquidateRepayAmount",
    inputs: [
      {
        name: "_status",
        type: "tuple",
        internalType: "struct PoolStatus",
        components: [
          {
            name: "blockTimestampLast",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "realReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "realReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "marginFee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "lendingRealReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingRealReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "rate0CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rate1CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
        ],
      },
      {
        name: "marginForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "assetsAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "repayAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLiquidateRepayAmount",
    inputs: [
      {
        name: "manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "positionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "repayAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMaxDecrease",
    inputs: [
      {
        name: "positionManager",
        type: "address",
        internalType: "address",
      },
      {
        name: "positionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "maxAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMaxDecrease",
    inputs: [
      {
        name: "_poolManager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_status",
        type: "tuple",
        internalType: "struct PoolStatus",
        components: [
          {
            name: "blockTimestampLast",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "realReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "realReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "marginFee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "lendingRealReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingRealReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "rate0CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rate1CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
        ],
      },
      {
        name: "_position",
        type: "tuple",
        internalType: "struct MarginPosition",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "marginAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "marginTotal",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "borrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rawBorrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rateCumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "maxAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPositions",
    inputs: [
      {
        name: "positionManager",
        type: "address",
        internalType: "contract IMarginPositionManager",
      },
      {
        name: "positionIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "_position",
        type: "tuple[]",
        internalType: "struct MarginPositionVo[]",
        components: [
          {
            name: "position",
            type: "tuple",
            internalType: "struct MarginPosition",
            components: [
              {
                name: "poolId",
                type: "bytes32",
                internalType: "PoolId",
              },
              {
                name: "marginForOne",
                type: "bool",
                internalType: "bool",
              },
              {
                name: "marginAmount",
                type: "uint128",
                internalType: "uint128",
              },
              {
                name: "marginTotal",
                type: "uint128",
                internalType: "uint128",
              },
              {
                name: "borrowAmount",
                type: "uint128",
                internalType: "uint128",
              },
              {
                name: "rawBorrowAmount",
                type: "uint128",
                internalType: "uint128",
              },
              {
                name: "rateCumulativeLast",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "pnl",
            type: "int256",
            internalType: "int256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getProfitMillions",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getReserves",
    inputs: [
      {
        name: "_poolManager",
        type: "address",
        internalType: "address",
      },
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "marginForOne",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "reserveBorrow",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserveMargin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "liquidationMarginLevel",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "liquidationRatio",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxLeverage",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minBorrowLevel",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minMarginLevel",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setCallerProfit",
    inputs: [
      {
        name: "_callerProfit",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLiquidationMarginLevel",
    inputs: [
      {
        name: "_liquidationMarginLevel",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLiquidationRatio",
    inputs: [
      {
        name: "_liquidationRatio",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMaxLeverage",
    inputs: [
      {
        name: "_maxLeverage",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMinBorrowLevel",
    inputs: [
      {
        name: "_minBorrowLevel",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMinMarginLevel",
    inputs: [
      {
        name: "_minMarginLevel",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setProtocolProfit",
    inputs: [
      {
        name: "_protocolProfit",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updatePosition",
    inputs: [
      {
        name: "positionManager",
        type: "address",
        internalType: "contract IMarginPositionManager",
      },
      {
        name: "_position",
        type: "tuple",
        internalType: "struct MarginPosition",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "marginAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "marginTotal",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "borrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rawBorrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rateCumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct MarginPosition",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "marginAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "marginTotal",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "borrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rawBorrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rateCumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StateChanged",
    inputs: [
      {
        name: "name",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "oldValue",
        type: "uint24",
        indexed: false,
        internalType: "uint24",
      },
      {
        name: "newValue",
        type: "uint24",
        indexed: false,
        internalType: "uint24",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "LeverageOverflow",
    inputs: [],
  },
  {
    type: "error",
    name: "MathOverflowedMulDiv",
    inputs: [],
  },
  {
    type: "error",
    name: "Overflow",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60803460cf57601f612ee938819003918201601f19168301916001600160401b0383118484101760d35780849260209460405283398101031260cf57516001600160a01b0381169081900360cf575f549060405191815f7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a36001600160b81b03600560a01b6001600160b81b03199290921692909217171667aae6008ed280864760bd1b175f55600180546001600160481b0319166713880027100e7ef0179055612e0190816100e88239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c806307146edd14611e2857806310960f9d14611bb35780631285a5eb146119255780631775765f146119035780632220d3b51461186957806325b69c0c146118455780632c149e11146117ac578063560d73d7146116f3578063597400b1146116505780636216b07b1461162b57806362d5e44f146115ec578063707344c7146115c85780637b1902171461152d5780638da5cb5b14611506578063a33f97fe14611197578063ac3e7b4c14610eed578063ac6aa58814610ebe578063ae3302c214610e9a578063c7e1aea014610dfd578063d53e236714610a0e578063d69ca16c146109ef578063d72fc2791461093a578063d901499214610895578063dccbe8fe1461080c578063de2a0946146106a9578063e52c2cfb1461049b578063eabde6cb146101c65763f2fde38b1461014d575f80fd5b346101c25760203660031901126101c257610166611e61565b5f549061017d336001600160a01b03841614612939565b60018060a01b031680916bffffffffffffffffffffffff60a01b16175f55337f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b5f80fd5b346101c2576103603660031901126101c2576101e0611e61565b6101e936611f30565b6101f236612305565b915f9160208401906102078251151582612a84565b93906102256001600160801b036080890151165f5460e81c90612bc2565b6060880180519096906001600160801b0316156103dd579161024a9160049593612c36565b935b51156103c9576101c00151602001516001600160a01b03165b60206001600160801b0361028560408a019782808a511691511690612a57565b604051635e6263eb60e01b81529591169385919082906001600160a01b03165afa90811561038f576102f3976020945f9361039a575b50516040519889948593849363f21ce75f60e01b8552600485016040919493926060820195825260018060a01b031660208201520152565b03916001600160a01b03165afa801561038f575f9061035c575b6020945080821061033f575b5050516001600160801b0316908082101561033857505b604051908152f35b9050610330565b6001600160801b039293509061035491612a77565b919084610319565b506020843d602011610387575b8161037660209383611efc565b810103126101c2576020935161030d565b3d9150610369565b6040513d5f823e3d90fd5b6103bb919350853d87116103c2575b6103b38183611efc565b8101906124e8565b91896102bb565b503d6103a9565b6101c00151516001600160a01b0316610265565b50845161042192506104725761041b6103f585612d8c565b916001600160701b03610414828261040c8a612d6d565b965b16612a19565b9316612a77565b90612a39565b916001830180931161045e5762ffffff60406101c0830151015116620f42400392620f4240841161045e5760049361045891612b23565b9361024c565b634e487b7160e01b5f52601160045260245ffd5b61041b61047e85612d6d565b916001600160701b0361041482826104958a612d8c565b9661040e565b346101c25760403660031901126101c2576001600160a01b036104bc611e61565b166040519063eb02c30160e01b8252602435600483015260e082602481845afa91821561038f575f92610672575b5060206004916040519283809263bc37857d60e01b82525afa90811561038f575f91610633575b50604051637436595f60e11b815290602090829060049082906001600160a01b03165afa90811561038f575f91610614575b5061026082516024604051809481936302ef145760e51b8352600483015260018060a01b03165afa90811561038f575f916105c8575b60206103306105ba846105b3876001600160801b036105ac87830151151592826060816040840151169201511690612a57565b1692612a84565b9190612c36565b62ffffff6001541690612bc2565b90506102603d811161060d575b6105df8183611efc565b810190610260818303126101c2576020926105b3610603610330946105ba9461252b565b9350509250610579565b503d6105d5565b61062d915060203d6020116103c2576103b38183611efc565b82610543565b90506020813d60201161066a575b8161064e60209383611efc565b810103126101c25760206106636004926124d4565b9150610511565b3d9150610641565b600491925061069a60209160e03d60e0116106a2575b6106928183611efc565b810190612453565b9291506104ea565b503d610688565b346101c25760403660031901126101c2576106c2611e61565b60243567ffffffffffffffff81116101c2576106e29036906004016123a7565b6106eb81612974565b916106f96040519384611efc565b81835261070582612974565b602084019190601f190136833761071b83612974565b946107296040519687611efc565b83865261073584612974565b602087019490601f19013686375f5b8181106107ca5750505050604051938493604085019060408652518091526060850192905f5b8181106107af575050506020908483038286015251918281520191905f5b818110610796575050500390f35b8251845285945060209384019390920191600101610788565b8251151585528796506020948501949092019160010161076a565b806107e76107e060019385889c999a9b9c6129e1565b35856126bb565b6107f18389612a05565b526107fc828b612a05565b9015159052019695949396610744565b346101c25760203660031901126101c257610825611f1e565b61083960018060a01b035f54163314612939565b6001545f80516020612dac83398151915260a062ffffff6040519460608652601060608701526f6c69717569646174696f6e526174696f60801b608087015281851660208701521693846040820152a162ffffff191617600155005b346101c25760203660031901126101c2576108ae611f1e565b5f54906108c5336001600160a01b03841614612939565b5f80516020612dac83398151915260a06040516060815260166060820152751b1a5c5d5a59185d1a5bdb93585c99da5b93195d995b60521b608082015262ffffff8560b81c16602082015262ffffff84166040820152a162ffffff60b81b1990911660b89190911b62ffffff60b81b16175f55005b346101c2576102e03660031901126101c25761095536612113565b61095d6122f5565b9061028435906102a4355f549162ffffff8360a01c1684116109e05760209461098591612a84565b93156109b6576109a89362ffffff9261099d92612c36565b9160d01c1690612b23565b604051906102c43511158152f35b9261041b826109cb6109db966109d195612a19565b92612a2c565b9060e81c90612b23565b6109a8565b637d5e642360e01b5f5260045ffd5b346101c2575f3660031901126101c25760205f5460e81c604051908152f35b346101c2576101003660031901126101c257610a28611e61565b60e03660231901126101c257604051610a4081611ee0565b602435815260443580151581036101c25760208201908152606435926001600160801b03841684036101c25760408301938452608435916001600160801b03831683036101c2576060840192835260a4356001600160801b03811681036101c2576080850190815260c4356001600160801b03811681036101c25760a08601526004602060c087019460e4358652610ad661298c565b5060405163bc37857d60e01b815292839182906001600160a01b03165afa90811561038f575f91610dc3575b5060018060a01b0316908351610b25575b60e086610b2360405180926123d8565bf35b6040516313ac42a760e01b815290602082600481865afa91821561038f575f92610d7f575b508651845160405163ad9fccf160e01b81526004810186905260248101929092521515604482015291602090839060649082906001600160a01b03165afa91821561038f575f92610d48575b5090846020939260049651838110610d25575b5050505060405193848092637436595f60e11b82525afa91821561038f575f92610d04575b506102a0845160246040518095819363d791263360e01b8352600483015260018060a01b03165afa91821561038f575f92610c70575b50610c4260e09560206001600160701b0394610c5a945115155f14610c67578101510151905b84610c47610c42846001600160801b03855116612ac8565b612d2a565b1690526001600160801b03855116612ac8565b1690528280808080610b13565b01515190610c2a565b91506102a03d8111610cfd575b610c878184611efc565b82018281036102a081126101c257604090610cad825193610ca785611e77565b8661252b565b835261025f1901126101c25760e0956020610c5a93610c42936001600160701b039661028060405191610cdf83611e77565b61026081015183520151848201528382015295509350509550610c04565b503d610c7d565b610d1e91925060203d6020116103c2576103b38183611efc565b9085610bce565b610d3b846001600160801b039283855116612cd3565b1690525287808080610ba9565b9291506020833d602011610d77575b81610d6460209383611efc565b810103126101c257915190916004610b96565b3d9150610d57565b9091506020813d602011610dbb575b81610d9b60209383611efc565b810103126101c257516001600160a01b03811681036101c2579088610b4a565b3d9150610d8e565b90506020813d602011610df5575b81610dde60209383611efc565b810103126101c257610def906124d4565b87610b02565b3d9150610dd1565b346101c25760203660031901126101c257610e16611f1e565b5f5490610e2d336001600160a01b03841614612939565b5f80516020612dac83398151915260a060405160608152600e60608201526d1b5a5b93585c99da5b93195d995b60921b608082015262ffffff8560d01c16602082015262ffffff84166040820152a162ffffff60d01b1990911660d09190911b62ffffff60d01b16175f55005b346101c2575f3660031901126101c257602062ffffff5f5460a01c16604051908152f35b346101c2575f3660031901126101c257604060015462ffffff825191818160181c16835260301c166020820152f35b346101c25760603660031901126101c257610f06611e61565b60443590610f126129c2565b60405163bc37857d60e01b81526001600160a01b0390921692909190602082600481875afa91821561038f575f92611158575b5060405163eb02c30160e01b81526024803560048301526001600160a01b0390931694909260e09184919082905afa91821561038f575f92611137575b506001600160801b036080830151168015801561112f575b15610fba575050602092509082915f838301525b81520151604051908152f35b81610fc491612bc2565b93606083016001600160801b03815116155f1461108e57508251602080850151604051630b7c735d60e31b81526004810193909352151560248301526044820196909652939492939290839060649082905afa91821561038f575f92611054575b509161104b6020949261104686956001600160801b03604086015116612bc2565b612cbb565b83830152610fae565b939150916020843d602011611086575b8161107160209383611efc565b810103126101c257925190929161104b611025565b3d9150611064565b835160208086015160405163b447325960e01b8152600481019390935215602483015260448201979097529095909291839060649082905afa91821561038f575f926110f4575b506020949161104661104b926001600160801b03889796955116612bc2565b939291506020843d602011611127575b8161111160209383611efc565b810103126101c2579251919290919060206110d5565b3d9150611104565b508115610f9a565b61115191925060e03d60e0116106a2576106928183611efc565b9084610f82565b91506020823d60201161118f575b8161117360209383611efc565b810103126101c25760e06111886024936124d4565b9250610f45565b3d9150611166565b346101c25760403660031901126101c2576111b0611e61565b60243567ffffffffffffffff81116101c2576111d09036906004016123a7565b91906111db83612974565b926111e96040519485611efc565b808452601f196111f882612974565b015f5b8181106114e95750506001600160a01b03909216915f5b81811061127457846040518091602082016020835281518091526020604084019201905f5b818110611245575050500390f35b91935091602061010060019282875161125f8382516123d8565b015160e0820152019401910191849392611237565b61127f8183856129e1565b35906112896129c2565b60405163bc37857d60e01b81526020816004818a5afa90811561038f575f916114b0575b5060405163eb02c30160e01b815260048101949094526001600160a01b03169260e0816024818a5afa90811561038f575f91611492575b506001600160801b036080820151168015801561148b575b1561132b5750600193505f60208301525b81526113198288612a05565b526113248187612a05565b5001611212565b620f424061133891612bc2565b93606082016001600160801b03815116155f146113f557508151602080840151604051630b7c735d60e31b815260048101939093521515602483015260448201969096529490859060649082905afa93841561038f575f946113c0575b506113b6600194611046620f42406001600160801b03604086015116612bc2565b602083015261130d565b93506020843d82116113ed575b816113da60209383611efc565b810103126101c2579251926113b6611395565b3d91506113cd565b825160208085015160405163b447325960e01b81526004810193909352156024830152604482019790975290959091829060649082905afa90811561038f575f91611459575b506113b690611046620f42406001600160801b036001985116612bc2565b90506020813d8211611483575b8161147360209383611efc565b810103126101c25751600161143b565b3d9150611466565b505f6112fc565b6114aa915060e03d81116106a2576106928183611efc565b886112e4565b90506020813d82116114e1575b816114ca60209383611efc565b810103126101c2576114db906124d4565b886112ad565b3d91506114bd565b6020906114f79594956129c2565b828289010152019392936111fb565b346101c2575f3660031901126101c2575f546040516001600160a01b039091168152602090f35b346101c25760203660031901126101c257611546611f1e565b61155a60018060a01b035f54163314612939565b65ffffff000000600154915f80516020612dac83398151915260a060405160608152600c60608201526b18d85b1b195c941c9bd99a5d60a21b608082015262ffffff8660181c16602082015262ffffff84166040820152a160181b169065ffffff0000001916176001555f80f35b346101c2575f3660031901126101c257602062ffffff5f5460b81c16604051908152f35b346101c2576102a03660031901126101c25760206103306105ba61162061161236612113565b61161a6122f5565b90612a84565b906102843590612c36565b346101c25760403660031901126101c257611644611e61565b50602060405160018152f35b346101c25760203660031901126101c257611669611f1e565b61167d60018060a01b035f54163314612939565b68ffffff000000000000600154915f80516020612dac83398151915260a060405160608152600e60608201526d1c1c9bdd1bd8dbdb141c9bd99a5d60921b608082015262ffffff8660301c16602082015262ffffff84166040820152a160301b169068ffffff0000000000001916176001555f80f35b346101c25760603660031901126101c25761170c611e61565b60443580151581036101c2576040516302ef145760e51b8152602480356004830152909261026091849182906001600160a01b03165afa91821561038f575f92611769575b604061175d8385612a84565b82519182526020820152f35b91506102603d81116117a5575b6117808184611efc565b820190610260838303126101c25761179d61175d9260409461252b565b925090611751565b503d611776565b346101c25760203660031901126101c2576117c5611f1e565b5f54906117dc336001600160a01b03841614612939565b5f80516020612dac83398151915260a060405160608152600b60608201526a6d61784c6576657261676560a81b608082015262ffffff85831c16602082015262ffffff84166040820152a162ffffff60a01b1990911660a09190911b62ffffff60a01b16175f55005b346101c2575f3660031901126101c257602062ffffff5f5460d01c16604051908152f35b346101c25760203660031901126101c257611882611f1e565b5f5490611899336001600160a01b03841614612939565b5f80516020612dac83398151915260a060405160608152600e60608201526d1b5a5b909bdc9c9bddd3195d995b60921b60808201528460e81c602082015262ffffff84166040820152a16001600160e81b0390911660e89190911b6001600160e81b031916175f55005b346101c2575f3660031901126101c257602062ffffff60015416604051908152f35b346101c25760403660031901126101c2576001600160a01b03611946611e61565b166040519063eb02c30160e01b8252602435600483015260e082602481845afa91821561038f575f92611b8c575b5060206004916040519283809263bc37857d60e01b82525afa90811561038f575f91611b52575b5061026082516024604051809481936302ef145760e51b8352600483015260018060a01b03165afa90811561038f575f91611b18575b505f90602083016119e58151151583612a84565b9290611a036001600160801b036080880151165f5460e81c90612bc2565b6060870180519095906001600160801b031615611a7c57966001600160801b0393611a36611a509460409460209b612c36565b955b5115611a7657505b0193828086511691511690612a57565b1680821061033f575050516001600160801b031690808210156103385750604051908152f35b50611a40565b508351611aab9250611af55761041b611a9484612d8c565b916001600160701b03610414828261040c89612d6d565b6001810180911161045e5762ffffff60406101c0840151015116620f424003620f4240811161045e576020966001600160801b0393611aef604093611a5095612b23565b95611a38565b61041b611b0184612d6d565b916001600160701b03610414828261049589612d8c565b90506102603d8111611b4b575b611b2f8183611efc565b8101610260828203126101c257611b459161252b565b826119d1565b503d611b25565b90506020813d602011611b84575b81611b6d60209383611efc565b810103126101c257611b7e906124d4565b8261199b565b3d9150611b60565b6004919250611bab60209160e03d60e0116106a2576106928183611efc565b929150611974565b346101c2576103603660031901126101c2576004356001600160a01b038116908190036101c257611be336611f30565b611bec36612305565b905f915f9360808201916001600160801b0383511680611c19575b60408051871515815260208101899052f35b91939550919350936001600160801b03604083015116926001600160801b03611c4a60608501958287511690612a57565b1660208401918251151590815f14611e12576101c0850151602001516001600160a01b0316915b60c08701519081611dc8575b50509060206004939260405194858092635e6263eb60e01b82525afa90811561038f57611ce6966020945f93611da9575b50516040519788948593849363f21ce75f60e01b8552600485016040919493926060820195825260018060a01b031660208201520152565b03916001600160a01b03165afa92831561038f575f93611d68575b5082611d206001600160801b0395938693611d44965051151590612a84565b93519093921615611d5257611d3492612c36565b62ffffff5f5460b81c1690612b23565b915116118280808080611c07565b806109cb611d639461041b93612a19565b611d34565b925092906020833d602011611da1575b81611d8560209383611efc565b810103126101c257915190929091906001600160801b03611d01565b3d9150611d78565b611dc1919350853d87116103c2576103b38183611efc565b918b611cae565b15611e0657610180860151905b81811015611c7d5760049493929a50611dfc6020926001600160801b0392838d5116612cd3565b1699919293611c7d565b6101a086015190611dd5565b6101c0850151516001600160a01b031691611c71565b346101c25760403660031901126101c257611e4d611e44611e61565b602435906126bb565b604080519215158352602083019190915290f35b600435906001600160a01b03821682036101c257565b6040810190811067ffffffffffffffff821117611e9357604052565b634e487b7160e01b5f52604160045260245ffd5b6101e0810190811067ffffffffffffffff821117611e9357604052565b60a0810190811067ffffffffffffffff821117611e9357604052565b60e0810190811067ffffffffffffffff821117611e9357604052565b90601f8019910116810190811067ffffffffffffffff821117611e9357604052565b6004359062ffffff821682036101c257565b906102606023198301126101c257604051611f4a81611ea7565b809260243563ffffffff811681036101c25782526044356001600160701b03811681036101c25760208301526064356001600160701b03811681036101c25760408301526084356001600160701b03811681036101c257606083015260a4356001600160701b03811681036101c257608083015260c43562ffffff811681036101c25760a083015260e4356001600160701b03811681036101c25760c0830152610104356001600160701b03811681036101c25760e0830152610124356001600160701b03811681036101c257610100830152610144356001600160701b03811681036101c257610120830152610164356001600160701b03811681036101c25761014083015261018435906001600160701b03821682036101c25760a0916101608401526101a4356101808401526101c4356101a08401526101e31901126101c2576040519061209a82611ec4565b6101e4356001600160a01b03811681036101c2578252610204356001600160a01b03811681036101c25760208301526102243562ffffff811681036101c2576040830152610244358060020b81036101c257606083015261026435906001600160a01b03821682036101c2576101c09160808401520152565b906102606003198301126101c25760405161212d81611ea7565b809260043563ffffffff811681036101c25782526024356001600160701b03811681036101c25760208301526044356001600160701b03811681036101c25760408301526064356001600160701b03811681036101c25760608301526084356001600160701b03811681036101c257608083015260a43562ffffff811681036101c25760a083015260c4356001600160701b03811681036101c25760c083015260e4356001600160701b03811681036101c25760e0830152610104356001600160701b03811681036101c257610100830152610124356001600160701b03811681036101c257610120830152610144356001600160701b03811681036101c25761014083015261016435906001600160701b03821682036101c25760a091610160840152610184356101808401526101a4356101a08401526101c31901126101c2576040519061227c82611ec4565b6101c4356001600160a01b03811681036101c25782526101e4356001600160a01b03811681036101c25760208301526102043562ffffff811681036101c2576040830152610224358060020b81036101c257606083015261024435906001600160a01b03821682036101c2576101c09160808401520152565b610264359081151582036101c257565b60e0906102831901126101c2576040519061231f82611ee0565b816102843581526102a43580151581036101c25760208201526102c4356001600160801b03811681036101c25760408201526102e4356001600160801b03811681036101c2576060820152610304356001600160801b03811681036101c2576080820152610324356001600160801b03811681036101c25760a082015260c061034435910152565b9181601f840112156101c25782359167ffffffffffffffff83116101c2576020808501948460051b0101116101c257565b60c08091805184526020810151151560208501526001600160801b0360408201511660408501526001600160801b0360608201511660608501526001600160801b0360808201511660808501526001600160801b0360a08201511660a08501520151910152565b51906001600160801b03821682036101c257565b908160e09103126101c2576040519061246b82611ee0565b8051825260208101519081151582036101c25760c09160208401526124926040820161243f565b60408401526124a36060820161243f565b60608401526124b46080820161243f565b60808401526124c560a0820161243f565b60a0840152015160c082015290565b51906001600160a01b03821682036101c257565b908160209103126101c257516001600160a01b03811681036101c25790565b51906001600160701b03821682036101c257565b519062ffffff821682036101c257565b809291039161026083126101c25760405161254581611ea7565b809382519063ffffffff821682036101c25760a091835261256860208501612507565b602084015261257960408501612507565b604084015261258a60608501612507565b606084015261259b60808501612507565b60808401526125ab82850161251b565b828401526125bb60c08501612507565b60c08401526125cc60e08501612507565b60e08401526125de6101008501612507565b6101008401526125f16101208501612507565b6101208401526126046101408501612507565b6101408401526126176101608501612507565b6101608401526101808401516101808401526101a08401516101a08401526101bf1901126101c2576040519161264c83611ec4565b6126596101c082016124d4565b83526126686101e082016124d4565b602084015261267a610200820161251b565b6040840152610220810151908160020b82036101c25760608401919091526102400151906001600160a01b03821682036101c2576101c09160808401520152565b60405163eb02c30160e01b815260048101929092529091906001600160a01b031660e083602481845afa90811561038f576004935f92612915575b506020906040519485809263bc37857d60e01b82525afa92831561038f575f936128d6575b50604051637436595f60e11b815292602090849060049082906001600160a01b03165afa92831561038f575f936128b5575b5061026081516024604051809681936302ef145760e51b8352600483015260018060a01b03165afa92831561038f575f93612879575b505f905f9360808201906001600160801b03825116806127a6575b505050509190565b919350919450936001600160801b03604082015116916001600160801b036127d660608401948286511690612a57565b1691602081019060c08251151591825f14612874575b01519081612820575b505061281392611d206001600160801b039593869351151590612a84565b915116115f80808061279e565b1561286857610180830151905b818110156127f5576001600160801b0395938680949a506128596128139794611d2094838c5116612cd3565b169993509395508194506127f5565b6101a08301519061282d565b6127ec565b9092506102603d81116128ae575b6128918183611efc565b8101610260828203126101c2576128a79161252b565b915f612783565b503d612887565b6128cf91935060203d6020116103c2576103b38183611efc565b915f61274d565b92506020833d60201161290d575b816128f160209383611efc565b810103126101c25760206129066004946124d4565b935061271b565b3d91506128e4565b60209192506129329060e03d60e0116106a2576106928183611efc565b91906126f6565b1561294057565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b67ffffffffffffffff8111611e935760051b60200190565b6040519061299982611ee0565b5f60c0838281528260208201528260408201528260608201528260808201528260a08201520152565b604051906129cf82611e77565b5f6020836129db61298c565b81520152565b91908110156129f15760051b0190565b634e487b7160e01b5f52603260045260245ffd5b80518210156129f15760209160051b010190565b8181029291811591840414171561045e57565b9190820180921161045e57565b8115612a43570490565b634e487b7160e01b5f52601260045260245ffd5b906001600160801b03809116911601906001600160801b03821161045e57565b9190820391821161045e57565b9015612aaa576001600160701b0380806101608161014086015116940151165b16911691565b6001600160701b038080610140816101608601511694015116612aa4565b5f90828102925f1981830992848085109403938085039414612b1957600160701b841015612b0a5750600160701b910990828211900360901b910360701c1790565b63227bc15360e01b8152600490fd5b5050505060701c90565b90620f42408202905f19620f4240840992828085109403938085039414612bb35783821115612ba457620f4240829109815f0382168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b63227bc15360e01b5f5260045ffd5b5090612bbf9250612a39565b90565b9190915f838202915f1985820991838084109303928084039314612c285782620f42401115612b0a57507fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c261399394620f4240910990828211900360fa1b910360061c170290565b505050620f42409192500490565b9091828202915f1984820993838086109503948086039514612cae5784831115612ba457829109815f0382168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b505090612bbf9250612a39565b81810392915f13801582851316918412161761045e57565b6001600160801b031691612ce8828285612c36565b928215612a435709612d0a575b612d066001600160701b0391612d2a565b1690565b6001810180911115612cf557634e487b7160e01b5f52601160045260245ffd5b906001600160701b038216809203612d3e57565b631a93c68960e11b5f5260045ffd5b906001600160701b03809116911601906001600160701b03821161045e57565b612bbf906001600160701b036080816040840151169201511690612d4d565b612bbf906001600160701b036060816020840151169201511690612d4d56fe3877ad38a0d62d15e34f3b1586b4ade39f3af52d09b8b11583f13a2a193468a1a264697066735822122011749b77b562496cfa2f2a07a380baeb081056652d36ea2b07a2182bedba9a8564736f6c634300081a0033";

type MarginCheckerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarginCheckerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarginChecker__factory extends ContractFactory {
  constructor(...args: MarginCheckerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MarginChecker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MarginChecker__factory {
    return super.connect(runner) as MarginChecker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarginCheckerInterface {
    return new Interface(_abi) as MarginCheckerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MarginChecker {
    return new Contract(address, _abi, runner) as unknown as MarginChecker;
  }
}
