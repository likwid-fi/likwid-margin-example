/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MarginRouter, MarginRouterInterface } from "../MarginRouter";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_manager",
        type: "address",
        internalType: "contract IPoolManager",
      },
      {
        name: "_hook",
        type: "address",
        internalType: "contract IMarginHookManager",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "exactInput",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct MarginRouter.SwapParams",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "amountIn",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOut",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "exactOutput",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct MarginRouter.SwapParams",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "amountIn",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOut",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "handelSwap",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "params",
        type: "tuple",
        internalType: "struct MarginRouter.SwapParams",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "amountIn",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOut",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hook",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IMarginHookManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unlockCallback",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Swap",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount0",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "fee",
        type: "uint24",
        indexed: false,
        internalType: "uint24",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InsufficientOutputReceived",
    inputs: [],
  },
  {
    type: "error",
    name: "LockFailure",
    inputs: [],
  },
  {
    type: "error",
    name: "NotPoolManager",
    inputs: [],
  },
  {
    type: "error",
    name: "NotSelf",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c060405234801561000f575f80fd5b5060405161165f38038061165f83398101604081905261002e916100ad565b6001600160a01b038281166080525f80546001600160a01b0319169185169182178155604051859291907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0390811660a05216608052506100f7565b6001600160a01b03811681146100aa575f80fd5b50565b5f805f606084860312156100bf575f80fd5b83516100ca81610096565b60208501519093506100db81610096565b60408501519092506100ec81610096565b809150509250925092565b60805160a05161151061014f5f395f8181608e01526103df01525f818161017b015281816101cb015281816102b3015281816104ff01528181610601015281816106310152818161076f015261079b01526115105ff3fe608060405260043610610079575f3560e01c8063aab4125c1161004c578063aab4125c14610138578063c1991c3114610157578063dc4c90d31461016a578063f2fde38b1461019d575f80fd5b80637f5a7c7b1461007d5780638da5cb5b146100cd57806391dd7346146100eb57806399a263ce14610117575b5f80fd5b348015610088575f80fd5b506100b07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d8575f80fd5b505f546100b0906001600160a01b031681565b3480156100f6575f80fd5b5061010a610105366004610f02565b6101be565b6040516100c49190610f70565b61012a610125366004610fbb565b61021c565b6040519081526020016100c4565b348015610143575f80fd5b5061012a610152366004610fec565b6103a6565b61012a610165366004610fbb565b61088f565b348015610175575f80fd5b506100b07f000000000000000000000000000000000000000000000000000000000000000081565b3480156101a8575f80fd5b506101bc6101b7366004611021565b610911565b005b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102095760405163570c108560e11b815260040160405180910390fd5b61021383836109a3565b90505b92915050565b5f8160c00135428110156102615760405162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b60448201526064015b60405180910390fd5b5f8360a0013511801561027657506060830135155b6102b15760405162461bcd60e51b815260206004820152600c60248201526b20a6a7aaa72a2fa2a92927a960a11b6044820152606401610258565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166348c89491306001600160a01b031663aab4125c3387604051602401610302929190611049565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519184901b6001600160e01b031916825261034a925090600401610f70565b5f604051808303815f875af1158015610365573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261038c919081019061113d565b80602001905181019061039f91906111d1565b9392505050565b5f3330146103c7576040516314e1dbf760e11b815260040160405180910390fd5b6040516302ef145760e51b8152823560048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635de28ae09060240161022060405180830381865afa15801561042d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045191906112e4565b6101808101519091505f6060850135156104795761047260608601356113d8565b905061048a565b60a08501351561048a575060a08401355b5f8061049c60408801602089016113fe565b6104ac57602084015184516104b4565b835160208501515b91509150825f14610882575f60405180606001604052808960200160208101906104de91906113fe565b151581526020018581526020015f6001600160a01b031681525090505f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f3cd914c89866040518363ffffffff1660e01b815260040161054b929190611419565b6020604051808303815f875af1158015610567573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061058b91906111d1565b905060608b01351561070f576105a760408c0160208d016113fe565b6105bd576105b58160801d90565b600f0b6105cb565b6105c781600f0b90565b600f0b5b91508a608001358210156105f25760405163f262b62160e01b815260040160405180910390fd5b61062c6001600160a01b0387167f00000000000000000000000000000000000000000000000000000000000000008e60608f01355f610a3c565b6106737f000000000000000000000000000000000000000000000000000000000000000061066060608e0160408f01611021565b6001600160a01b0388169190855f610c89565b60608b013592505f8061068c60408e0160208f016113fe565b61069757838561069a565b84845b915091508d6001600160a01b03166106b38b60a0902090565b60408c81015181518681526020810186905262ffffff9091168183015290517f223a90f480199be13e3fbc9ce8841a33f05e1f02a5b0996534b4544e67806e0b9181900360600190a3839b505050505050505050505050610216565b60a08b01351561087d5761072960408c0160208d016113fe565b6107485761073781600f0b90565b600f0b610743906113d8565b61075e565b6107528160801d90565b600f0b61075e906113d8565b92506107966001600160a01b0387167f00000000000000000000000000000000000000000000000000000000000000008e865f610a3c565b6107e17f00000000000000000000000000000000000000000000000000000000000000006107ca60608e0160408f01611021565b6001600160a01b038816919060a08f01355f610c89565b60a08b013591505f806107fa60408e0160208f016113fe565b610805578484610808565b83855b915091508d6001600160a01b03166108218b60a0902090565b60408c81015181518681526020810186905262ffffff9091168183015290517f223a90f480199be13e3fbc9ce8841a33f05e1f02a5b0996534b4544e67806e0b9181900360600190a3849b505050505050505050505050610216565b505050505b505f979650505050505050565b5f8160c00135428110156108cf5760405162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b6044820152606401610258565b5f8360600135116102b15760405162461bcd60e51b815260206004820152600c60248201526b20a6a7aaa72a2fa2a92927a960a11b6044820152606401610258565b5f546001600160a01b031633146109595760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610258565b5f80546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60605f80306001600160a01b031685856040516109c192919061149a565b5f604051808303815f865af19150503d805f81146109fa576040519150601f19603f3d011682016040523d82523d5f602084013e6109ff565b606091505b50915091508115610a135791506102169050565b80515f03610a34576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b8015610ad157836001600160a01b031663f5298aca84610a6b886001600160a01b03166001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604481018590526064015b5f604051808303815f87803b158015610ab6575f80fd5b505af1158015610ac8573d5f803e3d5ffd5b50505050610c82565b6001600160a01b038516610b4857836001600160a01b03166311da60b4836040518263ffffffff1660e01b815260040160206040518083038185885af1158015610b1d573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610b4291906111d1565b50610c82565b604051632961046560e21b81526001600160a01b03868116600483015285169063a5841194906024015f604051808303815f87803b158015610b88575f80fd5b505af1158015610b9a573d5f803e3d5ffd5b505f925050506001600160a01b0384163014610bc357610bbc86858786610d5b565b9050610bd1565b610bce868685610e33565b90505b80610c1e5760405162461bcd60e51b815260206004820152601f60248201527f736574746c653a7472616e7366657220646964206e6f742073756363656564006044820152606401610258565b846001600160a01b03166311da60b46040518163ffffffff1660e01b81526004016020604051808303815f875af1158015610c5b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c7f91906111d1565b50505b5050505050565b80610ccb57604051630b0d9c0960e01b81526001600160a01b038681166004830152848116602483015260448201849052851690630b0d9c0990606401610a9f565b836001600160a01b031663156e29f684610cf4886001600160a01b03166001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604481018590526064015f604051808303815f87803b158015610d3e575f80fd5b505af1158015610d50573d5f803e3d5ffd5b505050505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291515f928392839291891691610dc091906114a9565b5f604051808303815f865af19150503d805f8114610df9576040519150601f19603f3d011682016040523d82523d5f602084013e610dfe565b606091505b5091509150818015610e28575080511580610e28575080806020019051810190610e2891906114bf565b979650505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291515f928392839291881691610e9091906114a9565b5f604051808303815f865af19150503d805f8114610ec9576040519150601f19603f3d011682016040523d82523d5f602084013e610ece565b606091505b5091509150818015610ef8575080511580610ef8575080806020019051810190610ef891906114bf565b9695505050505050565b5f8060208385031215610f13575f80fd5b823567ffffffffffffffff811115610f29575f80fd5b8301601f81018513610f39575f80fd5b803567ffffffffffffffff811115610f4f575f80fd5b856020828401011115610f60575f80fd5b6020919091019590945092505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60e08284031215610fb5575f80fd5b50919050565b5f60e08284031215610fcb575f80fd5b6102138383610fa5565b6001600160a01b0381168114610fe9575f80fd5b50565b5f806101008385031215610ffe575f80fd5b823561100981610fd5565b91506110188460208501610fa5565b90509250929050565b5f60208284031215611031575f80fd5b813561039f81610fd5565b8015158114610fe9575f80fd5b6001600160a01b038316815281356020808301919091526101008201908301356110728161103c565b801515604084015250604083013561108981610fd5565b6001600160a01b031660608381019190915283013560808084019190915283013560a08381019190915283013560c0808401919091529092013560e090910152919050565b634e487b7160e01b5f52604160045260245ffd5b6040516101a0810167ffffffffffffffff81118282101715611106576111066110ce565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611135576111356110ce565b604052919050565b5f6020828403121561114d575f80fd5b815167ffffffffffffffff811115611163575f80fd5b8201601f81018413611173575f80fd5b805167ffffffffffffffff81111561118d5761118d6110ce565b6111a0601f8201601f191660200161110c565b8181528560208385010111156111b4575f80fd5b8160208401602083015e5f91810160200191909152949350505050565b5f602082840312156111e1575f80fd5b5051919050565b80516dffffffffffffffffffffffffffff81168114611205575f80fd5b919050565b805162ffffff81168114611205575f80fd5b805163ffffffff81168114611205575f80fd5b80516001600160e01b0381168114611205575f80fd5b5f60a08284031215611255575f80fd5b60405160a0810167ffffffffffffffff81118282101715611278576112786110ce565b8060405250809150825161128b81610fd5565b8152602083015161129b81610fd5565b60208201526112ac6040840161120a565b604082015260608301518060020b81146112c4575f80fd5b606082015260808301516112d781610fd5565b6080919091015292915050565b5f6102208284031280156112f6575f80fd5b506112ff6110e2565b611308836111e8565b8152611316602084016111e8565b6020820152611327604084016111e8565b6040820152611338606084016111e8565b60608201526113496080840161120a565b608082015261135a60a0840161121c565b60a082015261136b60c084016111e8565b60c082015261137c60e084016111e8565b60e0820152610100838101519082015261012080840151908201526113a4610140840161121c565b6101408201526113b7610160840161122f565b6101608201526113cb846101808501611245565b6101808201529392505050565b5f600160ff1b82016113f857634e487b7160e01b5f52601160045260245ffd5b505f0390565b5f6020828403121561140e575f80fd5b813561039f8161103c565b82516001600160a01b03908116825260208085015182168184015260408086015162ffffff168185015260608087015160020b908501526080808701518416908501528451151560a08501529084015160c08401528301511660e08201526101206101008201525f61149261012083015f815260200190565b949350505050565b818382375f9101908152919050565b5f82518060208501845e5f920191825250919050565b5f602082840312156114cf575f80fd5b815161039f8161103c56fea264697066735822122031295f3c01f65b50f355f37c8a6b461fb489f5536c09cbbcfcb3283b7b01978e64736f6c634300081a0033";

type MarginRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarginRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarginRouter__factory extends ContractFactory {
  constructor(...args: MarginRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _manager: AddressLike,
    _hook: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _manager,
      _hook,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _manager: AddressLike,
    _hook: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      _manager,
      _hook,
      overrides || {}
    ) as Promise<
      MarginRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MarginRouter__factory {
    return super.connect(runner) as MarginRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarginRouterInterface {
    return new Interface(_abi) as MarginRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MarginRouter {
    return new Contract(address, _abi, runner) as unknown as MarginRouter;
  }
}
