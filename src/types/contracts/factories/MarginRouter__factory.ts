/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MarginRouter, MarginRouterInterface } from "../MarginRouter";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_manager",
        type: "address",
        internalType: "contract IPoolManager",
      },
      {
        name: "_pairPoolManager",
        type: "address",
        internalType: "contract IPairPoolManager",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "exactInput",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct MarginRouter.SwapParams",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "amountIn",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOut",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountInMax",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "exactOutput",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct MarginRouter.SwapParams",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "amountIn",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOut",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountInMax",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "handelSwap",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "msgValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "params",
        type: "tuple",
        internalType: "struct MarginRouter.SwapParams",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "amountIn",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOut",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountInMax",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pairPoolManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPairPoolManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unlockCallback",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Swap",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount0",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "fee",
        type: "uint24",
        indexed: false,
        internalType: "uint24",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InsufficientInput",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientInputReceived",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientOutput",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientOutputReceived",
    inputs: [],
  },
  {
    type: "error",
    name: "LockFailure",
    inputs: [],
  },
  {
    type: "error",
    name: "NotPoolManager",
    inputs: [],
  },
  {
    type: "error",
    name: "NotSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60c0346100f857601f61118338819003918201601f19168301916001600160401b038311848410176100fc578084926060946040528339810103126100f85780516001600160a01b03811691908290036100f8576020810151906001600160a01b03821682036100f85760400151906001600160a01b03821682036100f8576080525f80546001600160a01b0319168317815560405192907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360a0526110729081610111823960805181818161012f015281816102240152818161032d0152610644015260a05181818161017301526104fc0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c80636d8356e3146103b15780638da5cb5b1461038a57806391dd7346146102dc5780639f769a19146102b4578063b5399fef146101a2578063bc37857d1461015e578063dc4c90d31461011a5763f2fde38b14610071575f80fd5b346101165760203660031901126101165761008a610405565b5f54906001600160a01b03821633036100e25760018060a01b031680916bffffffffffffffffffffffff60a01b16175f55337f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b5f80fd5b34610116575f366003190112610116576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610116575f366003190112610116576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b610100366003190112610116576101bd4260e4351015610c18565b60a4351515806102aa575b6101d190610c4e565b61021f5f604051636d8356e360e01b6020820152610205816101f7343360248401610c89565b03601f198101835282610445565b604051809381926348c8949160e01b83526004830161041b565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af190811561029f575f9161027d575b50602081519181808201938492010103126101165760209051604051908152f35b61029991503d805f833e6102918183610445565b810190610d1d565b8161025c565b6040513d5f823e3d90fd5b50606435156101c8565b610100366003190112610116576102cf4260e4351015610c18565b6101d16064351515610c4e565b346101165760203660031901126101165760043567ffffffffffffffff811161011657366023820112156101165780600401359067ffffffffffffffff8211610116573660248383010111610116577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361037b5761037791602461036b9201610f77565b6040519182918261041b565b0390f35b63570c108560e11b5f5260045ffd5b34610116575f366003190112610116575f546040516001600160a01b039091168152602090f35b3461011657610140366003190112610116576103cb610405565b610100366043190112610116573033036103f6576103ee602091602435906104de565b604051908152f35b6314e1dbf760e11b5f5260045ffd5b600435906001600160a01b038216820361011657565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b90601f8019910116810190811067ffffffffffffffff82111761046757604052565b634e487b7160e01b5f52604160045260245ffd5b51906dffffffffffffffffffffffffffff8216820361011657565b519062ffffff8216820361011657565b51906001600160a01b038216820361011657565b600160ff1b81146104ca575f0390565b634e487b7160e01b5f52601160045260245ffd5b6040516302ef145760e51b81526044356004820152610260816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa801561029f575f90610a45575b6101c0015160a435801580159593505f90610a2d5750610552816104ba565b945b6064359081151594858303610116578215610a1257845160208601516001600160a01b03918216999116915b81610594575b505050505050505050505f90565b5f906040519860608a018a811067ffffffffffffffff821117610467576040908152908a526020808b019485525f8b83018181528351633cf3645360e21b81528c516001600160a01b0390811660048301528d85015181166024830152948d01805162ffffff16604483015260608e015160020b606483015260808e0151861660848301529d51151560a4820152965160c488015251831660e487015261012061010487015261012486018190527f000000000000000000000000000000000000000000000000000000000000000097928691610144918391908b165af193841561029f575f946109de575b50156107ca576001600160a01b038b161590816107bf575b506107b0576101165783156107a457600f0b975b60c435801515908161079a575b5061078b578488846106ca93610d8f565b6084356001600160a01b0381168103610116576106e8928992610f11565b1561075657907f223a90f480199be13e3fbc9ce8841a33f05e1f02a5b0996534b4544e67806e0b919361075062ffffff60a088945b2095516040805198895260208901959095521662ffffff16928601929092526001600160a01b0316939081906060820190565b0390a390565b92907f223a90f480199be13e3fbc9ce8841a33f05e1f02a5b0996534b4544e67806e0b9161075062ffffff60a088979461071d565b63f262b62160e01b5f5260045ffd5b905089105f6106b9565b60801d600f0b976106ac565b63f8b3bb6160e01b5f5260045ffd5b90508614155f610698565b999195505060e43594856107f157505050505050505050505f808080808080808080610586565b84156109cc576108069060801d600f0b6104ba565b985b6001600160a01b038216801580806109c3575b610879575b50505061010435801515908161086f575b506108605788888461084293610d8f565b6084356001600160a01b0381168103610116576106e8928592610f11565b63569302ef60e01b5f5260045ffd5b905089115f610831565b8b83039283116104ca571561090657505f808080938c5af11561089f575b5f8080610820565b6040516390bfb86560e01b81526001600160a01b03891660048201525f6024820181905260806044830152601f3d01601f191660a0810160648401523d6084840152903d9060a484013e808201600460a482015260c4633d2cec6f60e21b91015260e40190fd5b6040805163a9059cbb60e01b81526001600160a01b038c16600482015260248101939093529091905f9060208260448582895af13d15601f3d1160018551141617169282815282602082015201521561095f5750610897565b6040516390bfb86560e01b8152600481019190915263a9059cbb60e01b602482015260806044820152601f3d01601f191660a0810160648301523d60848301523d5f60a484013e808201600460a482015260c4633c9fd93960e21b91015260e40190fd5b508b831161081b565b6109d890600f0b6104ba565b98610808565b9093506020813d602011610a0a575b816109fa60209383610445565b810103126101165751925f610680565b3d91506109ed565b602085015185516001600160a01b0391821699911691610580565b9460e43580610a3d575b50610554565b95505f610a37565b50806102603d8111610c11575b610a5c8183610445565b810103610260811261011657604051906101e0820182811067ffffffffffffffff8211176104675760405282519063ffffffff821682036101165760a0918352610aa86020850161047b565b6020840152610ab96040850161047b565b6040840152610aca6060850161047b565b6060840152610adb6080850161047b565b6080840152610aeb828501610496565b82840152610afb60c0850161047b565b60c0840152610b0c60e0850161047b565b60e0840152610b1e610100850161047b565b610100840152610b31610120850161047b565b610120840152610b44610140850161047b565b610140840152610b57610160850161047b565b6101608401526101808401516101808401526101a08401516101a08401526101bf190112610116576040519160a0830183811067ffffffffffffffff82111761046757604052610baa6101c082016104a6565b8352610bb96101e082016104a6565b6020840152610bcb6102008201610496565b6040840152610220810151908160020b82036101165760608401919091526102400151916001600160a01b0383168303610116576101c092608082015282820152610533565b503d610a52565b15610c1f57565b60405162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b6044820152606490fd5b15610c5557565b60405162461bcd60e51b815260206004820152600c60248201526b20a6a7aaa72a2fa2a92927a960a11b6044820152606490fd5b90929161014082019360018060a01b03168252602082015260043560408201526024358015158091036101165760608201526044356001600160a01b0381169081900361011657608082015260643560a082015260843560c082015260a43560e082015260c43561010082015261012060e435910152565b67ffffffffffffffff811161046757601f01601f191660200190565b6020818303126101165780519067ffffffffffffffff8211610116570181601f8201121561011657805190610d5182610d01565b92610d5f6040519485610445565b8284526020838301011161011657815f9260208093018386015e8301015290565b90816020910312610116575190565b6001600160a01b0316929183610dfc5750604051630476982d60e21b81529250602091839160049183916001600160a01b03165af1801561029f57610dd15750565b610df29060203d602011610df5575b610dea8183610445565b810190610d80565b50565b503d610de0565b916001600160a01b0390911690813b1561011657604051632961046560e21b815260048101859052925a935f816024818388819af1801561029f57610ef6575b509293849360209392916001600160a01b0390911690308214610ec157610e9192604051926323b872dd60e01b878501526024840152846044840152606483015260648252610e8c608483610445565b610fe4565b600460405180958193630476982d60e21b83525af1908115610eb55750610dd15750565b604051903d90823e3d90fd5b610ef19291506040519163a9059cbb60e01b86840152846024840152604483015260448252610e8c606483610445565b610e91565b602093929194505f610f0791610445565b5f93909192610e3c565b91906001600160a01b0316803b1561011657604051630b0d9c0960e01b81526001600160a01b03938416600482015291909216602482015260448101929092525f908290606490829084905af1801561029f57610f6b5750565b5f610f7591610445565b565b5f9182918160405192839283378101838152039082305af1903d15610fdc573d91610fa183610d01565b92610faf6040519485610445565b83523d5f602085013e5b610f755750805115610fcd57602081519101fd5b6314815f4760e31b5f5260045ffd5b606091610fb9565b905f602091828151910182855af11561029f575f513d61103357506001600160a01b0381163b155b6110135750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b6001141561100c56fea26469706673582212203123a2a12d97cd987c9b955f308e444545742a57eafe1debe5c1b5ce26004b0064736f6c634300081a0033";

type MarginRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarginRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarginRouter__factory extends ContractFactory {
  constructor(...args: MarginRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _manager: AddressLike,
    _pairPoolManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _manager,
      _pairPoolManager,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _manager: AddressLike,
    _pairPoolManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      _manager,
      _pairPoolManager,
      overrides || {}
    ) as Promise<
      MarginRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MarginRouter__factory {
    return super.connect(runner) as MarginRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarginRouterInterface {
    return new Interface(_abi) as MarginRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MarginRouter {
    return new Contract(address, _abi, runner) as unknown as MarginRouter;
  }
}
