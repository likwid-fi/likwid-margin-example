/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  PairPoolManager,
  PairPoolManagerInterface,
} from "../PairPoolManager";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_manager",
        type: "address",
        internalType: "contract IPoolManager",
      },
      {
        name: "_mirrorTokenManager",
        type: "address",
        internalType: "contract IMirrorTokenManager",
      },
      {
        name: "_lendingPoolManager",
        type: "address",
        internalType: "contract ILendingPoolManager",
      },
      {
        name: "_marginLiquidity",
        type: "address",
        internalType: "contract IMarginLiquidity",
      },
      {
        name: "_marginFees",
        type: "address",
        internalType: "contract IMarginFees",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addLiquidity",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct AddLiquidityParams",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "amount0",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount1",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "level",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "addPositionManager",
    inputs: [
      {
        name: "_marginPositionManager",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collectProtocolFees",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAmountIn",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "zeroForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAmountOut",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "zeroForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getReserves",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
    ],
    outputs: [
      {
        name: "_reserve0",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_reserve1",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStatus",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
    ],
    outputs: [
      {
        name: "_status",
        type: "tuple",
        internalType: "struct PoolStatus",
        components: [
          {
            name: "blockTimestampLast",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "realReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "realReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "marginFee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "lendingRealReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingRealReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "rate0CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rate1CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "handleAddLiquidity",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "amount0",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "handleCollectFees",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amountCollected",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "handleMargin",
    inputs: [
      {
        name: "_positionManager",
        type: "address",
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "status",
        type: "tuple",
        internalType: "struct PoolStatus",
        components: [
          {
            name: "blockTimestampLast",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "realReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "realReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "marginFee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "lendingRealReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingRealReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "rate0CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rate1CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
        ],
      },
      {
        name: "paramsVo",
        type: "tuple",
        internalType: "struct MarginParamsVo",
        components: [
          {
            name: "params",
            type: "tuple",
            internalType: "struct MarginParams",
            components: [
              {
                name: "poolId",
                type: "bytes32",
                internalType: "PoolId",
              },
              {
                name: "marginForOne",
                type: "bool",
                internalType: "bool",
              },
              {
                name: "leverage",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "marginAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "borrowAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "borrowMaxAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "deadline",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "marginTotal",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minMarginLevel",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "marginCurrency",
            type: "address",
            internalType: "Currency",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "marginAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "marginWithoutFee",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "borrowAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "handleRelease",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "status",
        type: "tuple",
        internalType: "struct PoolStatus",
        components: [
          {
            name: "blockTimestampLast",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "realReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "realReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "marginFee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "lendingRealReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingRealReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "rate0CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rate1CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
        ],
      },
      {
        name: "params",
        type: "tuple",
        internalType: "struct ReleaseParams",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "payer",
            type: "address",
            internalType: "address",
          },
          {
            name: "debtAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "repayAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "releaseAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rawBorrowAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "handleRemoveLiquidity",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "amount0",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "handleSwapMirror",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hooks",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IHooks",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lendingPoolManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ILendingPoolManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "margin",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "status",
        type: "tuple",
        internalType: "struct PoolStatus",
        components: [
          {
            name: "blockTimestampLast",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "realReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "realReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "marginFee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "lendingRealReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingRealReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "rate0CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rate1CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
        ],
      },
      {
        name: "paramsVo",
        type: "tuple",
        internalType: "struct MarginParamsVo",
        components: [
          {
            name: "params",
            type: "tuple",
            internalType: "struct MarginParams",
            components: [
              {
                name: "poolId",
                type: "bytes32",
                internalType: "PoolId",
              },
              {
                name: "marginForOne",
                type: "bool",
                internalType: "bool",
              },
              {
                name: "leverage",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "marginAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "borrowAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "borrowMaxAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "deadline",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "marginTotal",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minMarginLevel",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "marginCurrency",
            type: "address",
            internalType: "Currency",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct MarginParamsVo",
        components: [
          {
            name: "params",
            type: "tuple",
            internalType: "struct MarginParams",
            components: [
              {
                name: "poolId",
                type: "bytes32",
                internalType: "PoolId",
              },
              {
                name: "marginForOne",
                type: "bool",
                internalType: "bool",
              },
              {
                name: "leverage",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "marginAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "borrowAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "borrowMaxAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "deadline",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "marginTotal",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minMarginLevel",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "marginCurrency",
            type: "address",
            internalType: "Currency",
          },
        ],
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "marginFees",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IMarginFees",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "marginLiquidity",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IMarginLiquidity",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mirrorInRealOut",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "status",
        type: "tuple",
        internalType: "struct PoolStatus",
        components: [
          {
            name: "blockTimestampLast",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "realReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "realReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "marginFee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "lendingRealReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingRealReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "rate0CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rate1CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
        ],
      },
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mirrorTokenManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IMirrorTokenManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "positionManagers",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "release",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "status",
        type: "tuple",
        internalType: "struct PoolStatus",
        components: [
          {
            name: "blockTimestampLast",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "realReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "realReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "marginFee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "lendingRealReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingRealReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "rate0CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rate1CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
        ],
      },
      {
        name: "params",
        type: "tuple",
        internalType: "struct ReleaseParams",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "payer",
            type: "address",
            internalType: "address",
          },
          {
            name: "debtAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "repayAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "releaseAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rawBorrowAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "removeLiquidity",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct RemoveLiquidityParams",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "level",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "liquidity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "amount0",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removePositionManager",
    inputs: [
      {
        name: "_marginPositionManager",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBalances",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
    ],
    outputs: [
      {
        name: "_status",
        type: "tuple",
        internalType: "struct PoolStatus",
        components: [
          {
            name: "blockTimestampLast",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "realReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "realReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "mirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "marginFee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "lendingRealReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingRealReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "lendingMirrorReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "truncatedReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "rate0CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rate1CumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setHooks",
    inputs: [
      {
        name: "_hooks",
        type: "address",
        internalType: "contract IHooks",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMarginFees",
    inputs: [
      {
        name: "_marginFees",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setStatusManager",
    inputs: [
      {
        name: "_poolStatusManager",
        type: "address",
        internalType: "contract IPoolStatusManager",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "statusManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolStatusManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "swap",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "params",
        type: "tuple",
        internalType: "struct IPoolManager.SwapParams",
        components: [
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "amountSpecified",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "sqrtPriceLimitX96",
            type: "uint160",
            internalType: "uint160",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "specified",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "unspecified",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "specifiedAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "unspecifiedAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "swapFee",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapMirror",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "zeroForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unlockCallback",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Burn",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "liquidity",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amount0",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "level",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Fees",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "currency",
        type: "address",
        indexed: true,
        internalType: "Currency",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "feeType",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
      {
        name: "fee",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialize",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "currency0",
        type: "address",
        indexed: true,
        internalType: "Currency",
      },
      {
        name: "currency1",
        type: "address",
        indexed: true,
        internalType: "Currency",
      },
      {
        name: "fee",
        type: "uint24",
        indexed: false,
        internalType: "uint24",
      },
      {
        name: "tickSpacing",
        type: "int24",
        indexed: false,
        internalType: "int24",
      },
      {
        name: "hooks",
        type: "address",
        indexed: false,
        internalType: "contract IHooks",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Mint",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "liquidity",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amount0",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "level",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Release",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "borrowCurrency",
        type: "address",
        indexed: true,
        internalType: "Currency",
      },
      {
        name: "debtAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "repayAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "burnAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "rawBorrowAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "HookAlreadySet",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientLiquidityBurnt",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientLiquidityMinted",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientValue",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientValue",
    inputs: [],
  },
  {
    type: "error",
    name: "LockFailure",
    inputs: [],
  },
  {
    type: "error",
    name: "MathOverflowedMulDiv",
    inputs: [],
  },
  {
    type: "error",
    name: "NotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "NotPoolManager",
    inputs: [],
  },
  {
    type: "error",
    name: "NotPositionManager",
    inputs: [],
  },
  {
    type: "error",
    name: "NotSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "StatusManagerAlreadySet",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x61010080604052346102fe5760c08161527780380380916100208285610302565b8339810103126102fe5780516001600160a01b03811691908290036102fe576020810151916001600160a01b038316918284036102fe576040810151916001600160a01b03831683036102fe576060820151946001600160a01b038616948587036102fe576080840151936001600160a01b03851685036102fe5760a001516001600160a01b03811696908790036102fe576020966044955f946080528560018060a01b0319865416178555604051998a988997877f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360a05260c05260e052600280546001600160a01b03191691909117905563558a729760e01b84526004840152600160248401525af180156102d6576102e1575b5060a05160c05160405163558a729760e01b81526001600160a01b0391821660048201526001602482015291602091839160449183915f91165af180156102d6576102a7575b604051614f25908161035282396080518181816104a101528181610aa801528181610ad8015281816110b9015281816110e501528181611227015281816113a90152818161194901528181611b9a01528181611d96015281816121cc015281816129b701528181612c3101528181612dc60152818161308c0152818161333b01528181613537015281816136290152818161394a01528181613b980152613ca3015260a0518181816101bb01528181610c430152818161150b01526127ac015260c05181818161050201528181610b2d01528181610bf901528181610da801528181610e5001528181611354015281816126880152818161275d01526133ce015260e0518181816102030152818161142a01528181611fb401528181612b400152612eec0152f35b6102c89060203d6020116102cf575b6102c08183610302565b810190610339565b505f61017f565b503d6102b6565b6040513d5f823e3d90fd5b6102f99060203d6020116102cf576102c08183610302565b610139565b5f80fd5b601f909101601f19168101906001600160401b0382119082101761032557604052565b634e487b7160e01b5f52604160045260245ffd5b908160209103126102fe575180151581036102fe579056fe60806040526004361015610011575f80fd5b5f803560e01c80630776e76e14613c6d57806309d1b448146137e957806312bd6d9e1461377f57806313ac42a714613757578063244195d3146136065780632bc5fd85146135685780633594e7c2146135125780635be39ae8146134835780635de28ae0146133fd5780635e6263eb146133b857806364d2756f146132d157806369f4180214612e345780636b4067fe1461260a57806373a865d514611f1a5780638161b87414611eaf5780638a05a2e614611e625780638da5cb5b14611e3b5780639005c01b14611bf757806391dd734614611b48578063a4a9e98814611aae578063b4473259146119e1578063bb4dab6d146117d1578063bfb9f86b1461162b578063c3edb7ff1461130f578063cd7033c4146112e6578063d8d232a2146112a7578063d93ed9c614611256578063dc4c90d314611211578063e2f0ab01146111c1578063e5215a7a14610876578063e86cb2be1461084d578063f10b0a5f14610311578063f2fde38b1461029e578063fb63daa114610232578063fb6b0e67146101ed5763ffcd9d16146101a6575f80fd5b346101ea57806003193601126101ea576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b50346101ea57806003193601126101ea576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101ea5760203660031901126101ea5761024c613cf6565b61026060018060a01b038354163314614338565b600154906001600160a01b03821661028f576001600160a01b03166001600160a01b0319919091161760015580f35b635f7c8ab560e11b8352600483fd5b50346101ea5760203660031901126101ea576102b8613cf6565b8154906102cf336001600160a01b03841614614338565b6001600160a01b03166001600160a01b03199190911681178255337f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b5060a03660031901126101ea57610326613cf6565b9061032f613d0c565b91604435606435801515810361084957600354604051632bc5fd8560e01b81526001600160a01b03858116600483015260248201859052909460843592909161026091879160449183918b91165af194851561083e57869561080d575b5060035460405163206a728560e21b8152959060609087906001600160a01b031681806103be888a886004850161459e565b03915afa9384156106b557879688956107d0575b506101c0919080156107b9576103fa6001600160701b03806080850151165b168911156146d9565b1561079e57015180516020909101516001600160a01b0391821691165b6001600160a01b03821693888515610763575b99898b819c9b9a9b6106eb575b50604051631aca73e160e11b60208201526001600160a01b03808816602483015286166044820152606481019390935261049c9261048281608481015b03601f198101835282613fa2565b604051809481926348c8949160e01b8352600483016142a1565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156106e05760209289926106c0575b506104fd8b6040519586948594636aa0852360e01b86528a600487016147e5565b03818a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156106b557610682575b50836105b1575b50506003546001600160a01b0316915050803b156105ad57602483926040519485938492638b14724560e01b845260048401525af180156105a257610589575b602082604051908152f35b610594838092613fa2565b61059e578161057e565b5080fd5b6040513d85823e3d90fd5b8280fd5b60035460405163096b565360e11b81526001600160a01b0392831660048201526024810195909552602091859160449183918a91165af192831561067757859361062d575b50604080515f815260208101949094526001600160a01b039091169284915f80516020614eb083398151915291a45f80808061053e565b945091506020843d60201161066f575b8161064a60209383613fa2565b8101031261066b579251859390915f80516020614eb08339815191526105f6565b5f80fd5b3d915061063d565b6040513d87823e3d90fd5b95506020863d6020116106ad575b8161069d60209383613fa2565b8101031261066b57879551610537565b3d9150610690565b6040513d89823e3d90fd5b6106db903d808d833e6106d38183613fa2565b810190614765565b6104dc565b6040513d8b823e3d90fd5b9192505080803411610702575b8990929192610437565b9880806107128194959c346146cc565b885af161071d614c10565b501561072c579689975f6106f8565b60405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606490fd5b5080341061078f57979896978997348210156107885788825b919b505098979861042a565b883461077c565b63044044a560e21b8952600489fd5b0151602081015190516001600160a01b039182169116610417565b6103fa6001600160701b03806060850151166103f1565b6101c09297506107f991955060603d606011610806575b6107f18183613fa2565b81019061457c565b97919050969490916103d2565b503d6107e7565b6108309195506102603d8111610837575b6108288183613fa2565b8101906143ab565b935f61038c565b503d61081e565b6040513d88823e3d90fd5b8380fd5b50346101ea57806003193601126101ea576003546040516001600160a01b039091168152602090f35b50346101ea576103e03660031901126101ea57610891613cf6565b610899613d0c565b6102603660431901126105ad57604051916108b383613f85565b60443563ffffffff811681036111bd5783526064356001600160701b03811681036111bd5760208401526084356001600160701b03811681036111bd57604084015260a4356001600160701b03811681036111bd57606084015260c4356001600160701b03811681036111bd57608084015260e43562ffffff811681036111bd5760a0840152610104356001600160701b03811681036111bd5760c0840152610124356001600160701b03811681036111bd5760e0840152610144356001600160701b03811681036111bd57610100840152610164356001600160701b03811681036111bd57610120840152610184356001600160701b03811681036111bd576101408401526101a4356001600160701b03811681036111bd576101608401526101c4356101808401526101e4356101a08401526109f33661020461404b565b6101c0840152366102a3190161014081126111bd573033036111ae5760e0136108495783604051610a2381613f4d565b6102a43581526102c43580151581036105ad5760208201526102e43562ffffff811681036105ad5760408201526103043560608201526103243560808201526103443560a08201526103643560c082015260208101511561118e576101c085015180516020909101516001600160a01b039081169691165b8396610acd6060850151887f000000000000000000000000000000000000000000000000000000000000000084614847565b610afd6060850151307f000000000000000000000000000000000000000000000000000000000000000084614a1d565b83519760208789610b286060890151866040519e8f9586956372a6b5df60e01b8752600487016147e5565b0381897f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af198891561083e578699611157575b50604085015162ffffff161561101557506002546040516353d5737f60e11b8152979060609089906103449082906001600160a01b0316610ba9600483018a613db4565b610bb761026483018b61421e565b5afa801561083e57869087998891610fdb575b5083916020919a99610bf489519260405195869485946372a6b5df60e01b865289600487016147e5565b03818a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156106b5578791610fa4575b50908691975b80610ee9575b505084517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169250610c78915083614c84565b813b15610ee5578591604483926040519485938492630d9778e560e11b845260048401528c60248401525af1908115610677578591610ed0575b50506101c0820151516001600160a01b03918216911603610ea457610ce46001600160701b03606083015116866147c8565b906001600160701b03608082015116915b80610e12575b5081610d6e575b50506003549051906001600160a01b0316803b156105ad57602483926040519485938492638b14724560e01b845260048401525af1801561067757610d59575b506060935060405192835260208301526040820152f35b610d64858092613fa2565b6108495783610d42565b6020908351610da360018060a01b03846101c085015101511694604051958694859463c3edb7ff60e01b865260048601614817565b0381867f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156105a257610de3575b80610d02565b610e049060203d602011610e0b575b610dfc8183613fa2565b8101906145d8565b505f610ddd565b503d610df2565b83516101c08301515160405163c3edb7ff60e01b81529260209284928392610e4b9290916001600160a01b031690889060048601614817565b0381887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156106775715610cfb57610e9d9060203d602011610e0b57610dfc8183613fa2565b505f610cfb565b6001600160701b0360608201511690610eca6001600160701b03608083015116876147c8565b91610cf5565b81610eda91613fa2565b61084957835f610cb2565b8580fd5b60035460405163236668f160e11b81526001600160a01b038681166004830152602482019390935293602092859260449284929091165af19182156106b5578792610f6d575b508551604080516001815260208101949094526001600160a01b03928316949092169290915f80516020614eb083398151915291a45f848180610c3d565b965090506020863d602011610f9c575b81610f8a60209383613fa2565b8101031261066b57899551905f610f2f565b3d9150610f7d565b919650506020813d602011610fd3575b81610fc160209383613fa2565b8101031261066b575189959086610c31565b3d9150610fb4565b60209a50849250611004915060603d60601161100e575b610ffc8183613fa2565b8101906146b1565b909a509091610bca565b503d610ff2565b955060018060a01b0360025416606085015190602086015115156103a43562ffffff811693848203611153576020936102c492506040519586948593637aadc49360e01b8552611068600486018d613db4565b6102648501526102848401526102a48301525afa90811561083e57869161111d575b5060808501518691908015611116578082101561110f57505b975b886110b2575b8197610c37565b6110de89307f0000000000000000000000000000000000000000000000000000000000000000876149b8565b61110a89827f000000000000000000000000000000000000000000000000000000000000000087614a6b565b6110ab565b90506110a3565b50976110a5565b9550506020853d60201161114b575b8161113960209383613fa2565b8101031261066b57888095519061108a565b3d915061112c565b8980fd5b955097506020853d602011611186575b8161117460209383613fa2565b8101031261066b57889451975f610b65565b3d9150611167565b6101c0850151602081015190516001600160a01b03908116969116610a9b565b6314e1dbf760e11b8552600485fd5b8480fd5b50346101ea5760203660031901126101ea576111db613cf6565b6111ef60018060a01b038354163314614338565b6001600160a01b03168152600460205260408120805460ff1916600117905580f35b50346101ea57806003193601126101ea576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101ea5760203660031901126101ea57611270613cf6565b61128460018060a01b038354163314614338565b60018060a01b03166bffffffffffffffffffffffff60a01b600254161760025580f35b50346101ea5760203660031901126101ea5760209060ff906040906001600160a01b036112d2613cf6565b168152600484522054166040519015158152f35b50346101ea57806003193601126101ea576001546040516001600160a01b039091168152602090f35b50346101ea576102c03660031901126101ea576004359061132f366140bf565b610284356001600160a01b03811693919291908481036105ad576102a43593611382337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614614338565b604051627eeac760e11b815230600482015260248101879052939586946001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169290602081604481875afa9081156106b55790889188916115f6575b50116113f9575b6020886040519015158152f35b604051630ead1e7d60e01b815230600482015260248101869052906114216044830182613db4565b6080826102a4817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156106b557908389939289938a936115ae575b506101c00151516001600160a01b0316036115a757505b101561148d575b806113ec565b6040516304ade6db60e11b815233600482015260248101919091526044810186905295506020908690606490829087905af19485156105a2578394956114d9945061158a575b50614c84565b604051637f4c824d60e11b815233600482015230602482015260448101919091526064810192909252602082608481847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af190811561157e5750611551575b50600160205f80808080611487565b6115729060203d602011611577575b61156a8183613fa2565b8101906145c0565b611542565b503d611560565b604051903d90823e3d90fd5b6115a29060203d6020116115775761156a8183613fa2565b6114d3565b9050611480565b9450925050506080823d6080116115ee575b816115cd60809383613fa2565b810103126115ea579087918360606040840151930151915f611469565b8680fd5b3d91506115c0565b9150506020813d602011611623575b8161161260209383613fa2565b8101031261066b578790515f6113e5565b3d9150611605565b50346101ea57366003190160a0811261059e5761165360018060a01b03600154163314614338565b6003546001600160a01b0316803b156105ad5760405163bfb9f86b60e01b8152916001600160a01b03611684613cf6565b1660048401526001600160a01b0361169a613d0c565b1660248401526044359262ffffff841693848103610ee557846044830152606435908160020b938483036117c257846064850152876084359460018060a01b038616978887036105ad578160a4818580948d60848401525af180156117c6576117ad575b505060a0136115ea576040519461171486613f69565b6004356001600160a01b0381169690959087870361115357868152602435906001600160a01b03821682036117a9577f3fd553db44f207b1f41348cfc4d251860814af9eadc470e8e7895e4d120511f49660609660a093602084015286604084015287830152608082015220955061178a6142e1565b92506040519788526020880152604087015260018060a01b031694a480f35b8a80fd5b816117b791613fa2565b6117c257875f6116fe565b8780fd5b6040513d84823e3d90fd5b506103803660031901126101ea576117e7613cf6565b6117f0366140bf565b610100366102831901126105ad57604051610100810181811067ffffffffffffffff8211176119cd576040526102843581526102a43580151581036111bd57602082019081526102c4356001600160a01b0381168103610ee55760408301908152606083016102e4358152608084019161030435835260a085019361032435855260c086019561034435875260e0810197610364358952338b52600460205260ff60408c205416156119be579161194499979593916118d58c9a9896946040519a6335a033ff60e11b60208d015260018060a01b031660248c015260448b0190613db4565b516102a48901525115156102c4880152516001600160a01b03166102e4870152516103048601525161032485015251610344840152516103648301525161038480830191909152815261192a6103a482613fa2565b604051809381926348c8949160e01b8352600483016142a1565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af191821561157e5780926119a3575b50506020815191818082019384920101031261066b5760209051604051908152f35b6119b792503d8091833e6106d38183613fa2565b5f80611981565b63041fb8cb60e31b8b5260048bfd5b634e487b7160e01b85526041600452602485fd5b50346101ea576119f036613efa565b6003546040516302ef145760e51b815260048101949094529192916001600160a01b031661026083602481845afa93841561067757611a51946060948791611a8f575b50604051637987bed160e11b8152958694859384936004850161459e565b03915afa9081156117c65760209291611a6e575b50604051908152f35b611a87915060603d606011610806576107f18183613fa2565b50505f611a65565b611aa891506102603d8111610837576108288183613fa2565b5f611a33565b50346101ea5760203660031901126101ea576003546040516302ef145760e51b815260048035908201529061026090829060249082906001600160a01b03165afa9081156117c65760409291611b29575b506001600160701b03611b1c81611b1584614cd4565b1692614cf3565b1682519182526020820152f35b611b4291506102603d8111610837576108288183613fa2565b5f611aff565b50346101ea5760203660031901126101ea5760043567ffffffffffffffff811161059e573660238201121561059e5780600401359167ffffffffffffffff83116101ea5736602484840101116101ea577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303611be857611be4611bd88460248501614c3f565b604051918291826142a1565b0390f35b63570c108560e11b8152600490fd5b506103c03660031901126101ea57611c0d613cf6565b611c16366140bf565b3661028319019161014083126108495760e060405193611c3585613f1d565b1261084957604051611c4681613f4d565b6102843581526102a4358015158103610ee55760208201526102c43562ffffff81168103610ee55760408201526102e43560608201526103043560808201526103243560a08201526103443560c0820152835260208301916103643583526103843562ffffff81168103610ee55760408501526103a4356001600160a01b0381168103610ee5576060850152846060604051611ce181613f1d565b604051611ced81613f4d565b83815283602082015283604082015283838201528360808201528360a08201528360c082015281528260208201528260408201520152338552600460205260ff60408620541615611e2c57604051637290ad3d60e11b60208201523360248201526001600160a01b039092166044830152611d91918591611d72906064830190613db4565b611d806102c4820186614266565b6103e4815261192a61040482613fa2565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115611e2157606091611dea91866101409792611e06575b5050602080825183010191016146b1565b91938551926080840152520152611e046040518092614266565bf35b611e1a92503d8091833e6106d38183613fa2565b5f80611dd9565b6040513d86823e3d90fd5b63041fb8cb60e31b8552600485fd5b50346101ea57806003193601126101ea57546040516001600160a01b039091168152602090f35b50346101ea5760203660031901126101ea57611e7c613cf6565b611e9060018060a01b038354163314614338565b6001600160a01b03168152600460205260408120805460ff1916905580f35b50346101ea576119448161047461192a611ec836613ec0565b611ee060018060a09794971b03600254163314614338565b6040516364d2756f60e01b60208201526001600160a01b039384166024820152949092166044850152606484019190915282906084820190565b5060c03660031901126101ea57611f354260a435101561467b565b600354604051632bc5fd8560e01b815233600480830191909152356024820181905291610260908290604490829087906001600160a01b03165af19081156105a25783916125eb575b506101c081018051519091906001600160a01b031615806125df575b6125d05760405163db620f4f60e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316939092602084602481885afa93841561083e57869461259c575b50604051627eeac760e11b81523060048201526024810185905294602086604481845afa9586156106b5578796612568575b5060405163acd6683160e01b815294602086600481855afa95861561255d578896612521575b506024359662ffffff604435971690620f42408210156124ec576001600160701b036120848161207d8a614cd4565b1698614cf3565b16871515806124e3575b156124c05761209e88828c614b66565b9280620f424003620f424081116124ac576120b99085614ae3565b90620f42400180620f4240116124ac576120d39085614ae3565b908a101590816124a1575b501561246d578a928981111561245c57508061210a612101612111938b8d614b66565b995b848b614b66565b928a614b66565b8082101561245557505b975b86811180612442575b612302575b505086156122f35790879161213e61430e565b906121476147d5565b92803b156111bd5784928360a49260ff604051978896879563e8101f0b60e01b875233600488015260018060a01b0316602487015260448601521660648401528c60848401525af19081156117c65785916122db575b5061192a6121c79351610474886040519485936303bb73b760e11b6020860152336024860161471a565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561083e576122c3575b5060035485906001600160a01b0316803b1561059e578190602460405180948193638b14724560e01b83528760048401525af1801561083e576122ae575b50602094507fdca088c2fe7922b62f9f0baee7a00b0de372311b1be3abea418c21f93dbc4a6d61226d61430e565b6122756147d5565b60408051888152602081019690965285019590955260ff90941660608401526001600160a01b03909316923392608090a4604051908152f35b6122b9868092613fa2565b6111bd578461223f565b6122d6903d8088833e6106d38183613fa2565b612201565b828092506122e891613fa2565b6101ea57835f61219d565b633489be7560e21b8852600488fd5b8451516001600160a01b03169061231a9088906146cc565b9080612391575081808092335af115612335575b875f61212b565b6040516390bfb86560e01b81523360048201526024810189905260806044820152601f3d01601f191660a0810160648301523d60848301523d8a60a484013e808201600460a482015260c4633d2cec6f60e21b91015260e40190fd5b91506040519063a9059cbb60e01b8252336004830152602482015289604060208260448582885af13d15601f3d116001855114161716928281528260208201520152156123de575061232e565b6040516390bfb86560e01b8152600481019190915263a9059cbb60e01b602482015260806044820152601f3d01601f191660a0810160648301523d60848301523d8a60a484013e808201600460a482015260c4633c9fd93960e21b91015260e40190fd5b508451516001600160a01b031615612126565b905061211b565b6121119199509861210a8b99612103565b60405162461bcd60e51b815260206004820152600c60248201526b4f55545f4f465f52414e474560a01b6044820152606490fd5b90508911155f6120de565b634e487b7160e01b8d52601160045260248dfd5b505050959493506124d96124d48587614bfd565b614d12565b958786959661211d565b5080151561208e565b60405162461bcd60e51b815260206004820152600d60248201526c4552524f525f534c4944494e4760981b6044820152606490fd5b9095506020813d602011612555575b8161253d60209383613fa2565b810103126117c25761254e90614387565b945f61204e565b3d9150612530565b6040513d8a823e3d90fd5b9095506020813d602011612594575b8161258460209383613fa2565b8101031261066b5751945f612028565b3d9150612577565b9093506020813d6020116125c8575b816125b860209383613fa2565b8101031261066b5751925f611ff6565b3d91506125ab565b63044044a560e21b8452600484fd5b50346024351415611f9a565b61260491506102603d8111610837576108288183613fa2565b5f611f7e565b50346101ea576103803660031901126101ea57612625613cf6565b9061262f366140bf565b916101003661028319011261059e57303303612e255761264d614548565b15612e05576101c083015180516020909101516001600160a01b039182169491165b610304359261032435908115612db7578415612d29575b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166126b86142f7565b9260018101809111612d1557813b156117c257604051630bbc0f5760e01b81526001600160a01b039384166004820152929093166024830152610284356044830152909286928492610304928492869291612716606486018b613db4565b6001600160a01b03166102c48501526102e48401525af18015611e2157908491612d00575b50505b610284359061274d8286614c84565b60408051637a94c56560e11b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660048201819052602482018490526102e4356044830181905294909282806064810103818b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af191821561255d5788908993612cc3575b50826127f1916147c8565b93888812612cb457888612612cb45785880391888313600116612ca057888714612bf1576002546001600160a01b0316926060906102c4612830614548565b604051633fa419cf60e11b815230600482015296879384926128556024850189613db4565b15156102848401526102a48301525afa928315612b9b578a8b918c95612baf575b508015801590612ba6575b612af1575b50505081612915575b505050505f80516020614ed08339815191526080869785939796975b60408051968752602087018a90528601526103443560608601526001600160a01b031693a36003546001600160a01b0316803b156105ad57602483926040519485938492638b14724560e01b845260048401525af180156105a25761058957602082604051908152f35b8399933b15612aed57604051636cf95b2960e01b81526004810191909152602481018290528881604481838e5af180156106e057908991612ad8575b508212612ac957878282019283129112908015821691151617612ab55786978782989798135f14612a2e576040516304ade6db60e11b81526001600160a01b039182166004820152908316602482015260448101919091529060208280606481010381897f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af190811561083e5785935f80516020614ed083398151915293608093612a0f575b505b9381995097969761288f565b612a279060203d6020116115775761156a8183613fa2565b505f612a01565b9290612a3990614558565b92803b156115ea5760405163ba4043db60e01b81526001600160a01b0384166004820152602481019490945286908490604490829084905af1801561083e5785938791612a9a575b50505f80516020614ed083398151915291608091612a03565b8192945090612aa891613fa2565b6111bd578391855f612a81565b634e487b7160e01b87526011600452602487fd5b6393dafdf160e01b8852600488fd5b81612ae291613fa2565b6117c257875f612951565b8880fd5b6001600160701b03612b0b612b0585614cd4565b94614cf3565b60405163ed4ed80b60e01b8152600481018d905294821660248601521660448401526064830152608482015260208160a4818d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af18015612b9b57612b7c575b8080612886565b612b949060203d602011610e0b57610dfc8183613fa2565b505f612b75565b6040513d8c823e3d90fd5b50811515612881565b945050506060833d606011612be9575b81612bcc60609383613fa2565b81010312611153578251602084015160409094015193905f612876565b3d9150612bbf565b50506040516304ade6db60e11b81526001600160a01b039384166004820152928916602484015250604482015294959394869460208280606481010381897f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af190811561083e5785935f80516020614ed083398151915293608093612c81575b506128ab565b612c999060203d6020116115775761156a8183613fa2565b505f612c7b565b634e487b7160e01b8a52601160045260248afd5b6393dafdf160e01b8952600489fd5b9250506040823d604011612cf8575b81612cdf60409383613fa2565b810103126117c2576127f16020835193015192906127e6565b3d9150612cd2565b81612d0a91613fa2565b6105ad57825f61273b565b634e487b7160e01b88526011600452602488fd5b9350612d33614548565b612da057612d4083614cd4565b612d4984614cf3565b62ffffff60406101c0870151015116620f424003620f42408111612d1557612d9a92916001600160701b03612d8d81612d85612d949589614ae3565b931683614bfd565b93166147c8565b90614ac5565b93612686565b612da983614cf3565b612db284614cd4565b612d49565b505050811561273e57612e00827f0000000000000000000000000000000000000000000000000000000000000000612df882612df16142f7565b838a614847565b309087614a1d565b61273e565b6101c0830151602081015190516001600160a01b0391821694911661266f565b6314e1dbf760e11b8252600482fd5b50346101ea5760803660031901126101ea5760405190612e5382613f1d565b600435825260243560ff8116810361059e57819060208401908152604084016044358152612e8b60643580606088015242111561467b565b6003548551604051632bc5fd8560e01b81523360048201526024810191909152946102609186916044918391906001600160a01b03165af19384156105a25783946132b0575b50845160405163db620f4f60e01b81526004810191909152937f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169390602086602481885afa9586156117c657829661327c575b506001600160701b03612f3f82614cd4565b16946001600160701b03612f5283614cf3565b16966040519663d5ffe20960e01b8852816004890152606088602481865afa9788156106775785928691879a613251575b50602090608460ff8b511691898b5198604051998a95869463fd32826f60e01b86523360048701526024860152604485015260648401525af192831561083e57869361321b575b61304b94508388526001600160701b0360208701511692612ffa82826001600160701b0360408b01511697614b66565b9b61300783828c51614b66565b9b60ff8c511660038114908115613210575b506131df575b505060ff8a5116600281149081156131d4575b506131aa575b505050881115908161319f575b506146d9565b85158015613197575b61318857818661192a6101c06130879401516104748960405194859363244195d360e01b6020860152336024860161471a565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156117c657613170575b5060018060a01b03600354168651813b156105ad578291602483926040519485938492638b14724560e01b845260048401525af180156117c65761315b575b5050935193519051604080519283526020830185905282810184905260ff90911660608301529333917fc2be77b0137decbf54134864ee86b9011325f158d6c136bbd73e45dbb383cbe790608090a382519182526020820152f35b613166828092613fa2565b6101ea5780613100565b613183903d8084833e6106d38183613fa2565b6130c1565b637435645360e11b8252600482fd5b508415613054565b90508611155f613045565b6131b392614b66565b808211156131cc576131c4916146cc565b5f8080613038565b5050836131c4565b60049150145f613032565b6131ed918491979397614b66565b80821115613207576131fe916146cc565b935b5f8061301f565b50508693613200565b60049150145f613019565b92506020843d602011613249575b8161323660209383613fa2565b8101031261066b5761304b935192612fca565b3d9150613229565b90995060209350613271915060603d60601161100e57610ffc8183613fa2565b919390919990612f83565b9095506020813d6020116132a8575b8161329860209383613fa2565b8101031261066b5751945f612f2d565b3d915061328b565b6132ca9194506102603d8111610837576108288183613fa2565b925f612ed1565b50346101ea576132e036613ec0565b929190923033036133a95760035460405163ba65fb1560e01b81526001600160a01b038681166004830152602482019390935291602091839160449183918891165af192831561157e5792613374575b508161336c916020947f000000000000000000000000000000000000000000000000000000000000000090613367843084846149b8565b614a6b565b604051908152f35b9091506020813d6020116133a1575b8161339060209383613fa2565b8101031261066b5751906020613330565b3d9150613383565b6314e1dbf760e11b8352600483fd5b50346101ea57806003193601126101ea576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101ea5760203660031901126101ea576134176145e7565b506003546040516302ef145760e51b815260048035908201529061026090829060249082906001600160a01b03165afa9081156117c6576102609291613466575b50611e046040518092613db4565b61347d9150823d8111610837576108288183613fa2565b5f613458565b50346101ea5761349236613efa565b6003546040516302ef145760e51b815260048101949094529192916001600160a01b031661026083602481845afa93841561067757611a519460609487916134f3575b5060405163206a728560e21b8152958694859384936004850161459e565b61350c91506102603d8111610837576108288183613fa2565b5f6134d5565b50346101ea5761352136613ec0565b909291923033036133a957613565929361355e837f0000000000000000000000000000000000000000000000000000000000000000928385614847565b3091614a1d565b80f35b50346101ea5760403660031901126101ea57613582613cf6565b61358a6145e7565b50338252600460205260ff604083205416156135f757600354604051632bc5fd8560e01b81526001600160a01b03928316600482015260248035908201529161026091839160449183918791165af19081156117c65761026092916134665750611e046040518092613db4565b63041fb8cb60e31b8252600482fd5b503461066b5761361536613d36565b919290303303613748576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008181169590929161365882614324565b16863b1561066b57604051637a94c56560e11b81523060048201526024810191909152604481018390525f81606481838b5af1801561373d57613728575b50602081019587906001600160a01b036136af89614324565b1690803b156105ad57604051637a94c56560e11b815230600482015260248101929092526044820188905282908290606490829084905af180156117c65761370f575b50509461370a6133679285856133676135659a614324565b614324565b8161371c91989398613fa2565b6115ea5794865f6136f2565b6137359197505f90613fa2565b5f955f613696565b6040513d5f823e3d90fd5b6314e1dbf760e11b5f5260045ffd5b3461066b575f36600319011261066b576002546040516001600160a01b039091168152602090f35b3461066b57602036600319011261066b576004356001600160a01b0381169081900361066b576137b960018060a01b035f54163314614338565b6003546001600160a01b0381166137da576001600160a01b03191617600355005b630d43628160e31b5f5260045ffd5b3461066b5761012036600319011261066b57613803613cf6565b60a036602319011261066b5760603660c319011261066b576001546001600160a01b0316613832338214614338565b6003546001600160a01b03169060a061384a36613fc4565b2090604051916302ef145760e51b8352600483015261026082602481865afa91821561373d575f92613c4c575b5060e4355f81129182613888614539565b151503613c28576138976142e1565b946138a06142cb565b925b8415613c22576138b190614558565b935b15613b155750506060826138f39460018060a01b0360035416906138d5614539565b60405163206a728560e21b815297889485938493906004850161459e565b03915afa92831561373d575f935f915f91613aef575b5060015460405163426a849360e01b81526001600160a01b03918216600482015290841660248201526044810186905291969091602081806064810103815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561373d57613ad0575b505b816139bc575b604080516001600160a01b038089168252851660208201529081018590526060810186905262ffffff8816608082015260a090f35b5f906139c6614539565b8214613abd576020613a166139d96142e1565b945b60035460405163096b565360e11b81526001600160a01b03888116600483015260248201939093529586939190921691839182906044820190565b03925af191821561373d575f92613a7c575b509162ffffff95939160a09895935f80516020614eb08339815191528a613a4e36613fc4565b20604080515f815260208101959095525f1960018e1b019384169590931693909290a4919381939650613987565b959391509693916020863d602011613ab5575b81613a9c60209383613fa2565b8101031261066b579451939692949193909260a0613a28565b3d9150613a8f565b6020613a16613aca6142cb565b946139db565b613ae89060203d6020116115775761156a8183613fa2565b508761397f565b915050613b0c91935060603d606011610806576107f18183613fa2565b91939187613909565b83606091613b449396613b26614539565b604051637987bed160e11b815295869485938493906004850161459e565b03915afa95861561373d575f965f925f91613bf2575b5060405163426a849360e01b81526001600160a01b03968716600482015295871660248701526044860185905291969460208180606481015b03815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561373d57613bd3575b50613981565b613beb9060203d6020116115775761156a8183613fa2565b5087613bcd565b85985060209350613b939150613c169060603d606011610806576107f18183613fa2565b91995093909150613b5a565b936138b3565b613c306142cb565b94613c396142e1565b6001600160a01b039687169616926138a2565b613c669192506102603d8111610837576108288183613fa2565b9084613877565b3461066b57613c7b36613d36565b91929030330361374857613cea83602086613cd9613c9b613cf499614324565b95613cc981897f0000000000000000000000000000000000000000000000000000000000000000809a614847565b3087613cd485614324565b614a1d565b019383613ce586614324565b614847565b613cd43092614324565b005b600435906001600160a01b038216820361066b57565b602435906001600160a01b038216820361066b57565b35906001600160a01b038216820361066b57565b9061010060031983011261066b576004356001600160a01b038116810361066b5760a09092602319011261066b5760249060c4359060e43590565b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff169084015260608083015160020b9084015260809182015116910152565b906101c080613ebe9363ffffffff81511684526001600160701b0360208201511660208501526001600160701b0360408201511660408501526001600160701b0360608201511660608501526001600160701b03608082015116608085015262ffffff60a08201511660a08501526001600160701b0360c08201511660c08501526001600160701b0360e08201511660e08501526001600160701b03610100820151166101008501526001600160701b03610120820151166101208501526001600160701b03610140820151166101408501526001600160701b03610160820151166101608501526101808101516101808501526101a08101516101a08501520151910190613d71565b565b606090600319011261066b576004356001600160a01b038116810361066b57906024356001600160a01b038116810361066b579060443590565b606090600319011261066b5760043590602435801515810361066b579060443590565b6080810190811067ffffffffffffffff821117613f3957604052565b634e487b7160e01b5f52604160045260245ffd5b60e0810190811067ffffffffffffffff821117613f3957604052565b60a0810190811067ffffffffffffffff821117613f3957604052565b6101e0810190811067ffffffffffffffff821117613f3957604052565b90601f8019910116810190811067ffffffffffffffff821117613f3957604052565b60a090602319011261066b5760405190613fdd82613f69565b816024356001600160a01b038116810361066b5781526044356001600160a01b038116810361066b57602082015260643562ffffff8116810361066b5760408201526084358060020b810361066b57606082015260a435906001600160a01b038216820361066b5760800152565b91908260a091031261066b5760405161406381613f69565b809261406e81613d22565b825261407c60208201613d22565b6020830152604081013562ffffff8116810361066b5760408301526060810135908160020b820361066b5760806140ba918193606086015201613d22565b910152565b9061026060231983011261066b576040516140d981613f85565b809260243563ffffffff8116810361066b5782526044356001600160701b038116810361066b5760208301526064356001600160701b038116810361066b5760408301526084356001600160701b038116810361066b57606083015260a4356001600160701b038116810361066b57608083015260c43562ffffff8116810361066b5760a083015260e4356001600160701b038116810361066b5760c0830152610104356001600160701b038116810361066b5760e0830152610124356001600160701b038116810361066b57610100830152610144356001600160701b038116810361066b57610120830152610164356001600160701b038116810361066b57610140830152610184356001600160701b038116810361066b576101c0916140ba916101608501526101a4356101808501526101c4356101a08501526101e461404b565b60c080918051845260208101511515602085015262ffffff6040820151166040850152606081015160608501526080810151608085015260a081015160a08501520151910152565b6101209061427583825161421e565b602081015160e0840152604081015162ffffff16610100840152606001516001600160a01b0316910152565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b6044356001600160a01b038116810361066b5790565b6024356001600160a01b038116810361066b5790565b6102c4356001600160a01b038116810361066b5790565b6084356001600160a01b038116810361066b5790565b356001600160a01b038116810361066b5790565b1561433f57565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b51906001600160701b038216820361066b57565b519062ffffff8216820361066b57565b51906001600160a01b038216820361066b57565b80910390610260821261066b57604051916143c583613f85565b81519063ffffffff8216820361066b5760a09184526143e660208401614373565b60208501526143f760408401614373565b604085015261440860608401614373565b606085015261441960808401614373565b6080850152614429828401614387565b8285015261443960c08401614373565b60c085015261444a60e08401614373565b60e085015261445c6101008401614373565b61010085015261446f6101208401614373565b6101208501526144826101408401614373565b6101408501526144956101608401614373565b6101608501526101808301516101808501526101a08301516101a08501526101bf19011261066b57604051906144ca82613f69565b6144d76101c08201614397565b82526144e66101e08201614397565b60208301526144f86102008201614387565b6040830152610220810151908160020b820361066b57606083019190915261024001516001600160a01b038116810361066b5760808201526101c082015290565b60c435801515810361066b5790565b6102a435801515810361066b5790565b600160ff1b8114614568575f0390565b634e487b7160e01b5f52601160045260245ffd5b9081606091031261066b57805191604061459860208401614387565b92015190565b610280919493926145b4826102a0810197613db4565b15156102608201520152565b9081602091031261066b5751801515810361066b5790565b9081602091031261066b575190565b604051906145f482613f85565b815f81525f60208201525f60408201525f60608201525f60808201525f60a08201525f60c08201525f60e08201525f6101008201525f6101208201525f6101408201525f6101608201525f6101808201525f6101a08201526101c06040519161465c83613f69565b5f83525f60208401525f60408401525f60608401525f60808401520152565b1561468257565b60405162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b6044820152606490fd5b9081606091031261066b578051916040602083015192015190565b9190820391821161456857565b156146e057565b60405162461bcd60e51b81526020600482015260126024820152714e4f545f454e4f5547485f5245534552564560701b6044820152606490fd5b6001600160a01b039091168152610100810194939260e092614740906020840190613d71565b60c08201520152565b67ffffffffffffffff8111613f3957601f01601f191660200190565b60208183031261066b5780519067ffffffffffffffff821161066b570181601f8201121561066b5780519061479982614749565b926147a76040519485613fa2565b8284526020838301011161066b57815f9260208093018386015e8301015290565b9190820180921161456857565b60643560ff8116810361066b5790565b6001600160a01b0391821681529181166020830152604082019290925291166060820152608081019190915260a00190565b909493926148346102a0936102c084019784526020840190613db4565b6001600160a01b03166102808201520152565b6001600160a01b03169291836148a45750604051630476982d60e21b81529250602091839160049183916001600160a01b03165af1801561373d576148895750565b6148a19060203d602011610e0b57610dfc8183613fa2565b50565b916001600160a01b0390911690813b1561066b57604051632961046560e21b815260048101859052925a935f816024818388819af1801561373d5761499d575b509293849360209392916001600160a01b039091169030821461495d5761493992604051926323b872dd60e01b878501526024840152846044840152606483015260648252614934608483613fa2565b614e57565b600460405180958193630476982d60e21b83525af190811561157e57506148895750565b60405163a9059cbb60e01b868201526001600160a01b0385166024820152604480820194909452928352614998929150614934606483613fa2565b614939565b602093929194505f6149ae91613fa2565b5f939091926148e4565b9192906001600160a01b0316803b1561066b57604051637a94c56560e11b81526001600160a01b03948516600482015293909216602484015260448301525f908290818381606481015b03925af1801561373d57614a135750565b5f613ebe91613fa2565b9192906001600160a01b0316803b1561066b57604051630ab714fb60e11b81526001600160a01b03948516600482015293909216602484015260448301525f90829081838160648101614a02565b91906001600160a01b0316803b1561066b57604051630b0d9c0960e01b81526001600160a01b03938416600482015291909216602482015260448101929092525f908290606490829084905af1801561373d57614a135750565b8115614acf570490565b634e487b7160e01b5f52601260045260245ffd5b9190915f838202915f1985820991838084109303928084039314614b585782620f42401115614b4957507fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c261399394620f4240910990828211900360fa1b910360061c170290565b63227bc15360e01b8152600490fd5b505050620f42409192500490565b9091828202915f1984820993838086109503948086039514614bed5784831115614bde57829109815f0382168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b63227bc15360e01b5f5260045ffd5b505090614bfa9250614ac5565b90565b8181029291811591840414171561456857565b3d15614c3a573d90614c2182614749565b91614c2f6040519384613fa2565b82523d5f602084013e565b606090565b5f9182918160405192839283378101838152039082305af190614c60614c10565b91613ebe5750805115614c7557602081519101fd5b6314815f4760e31b5f5260045ffd5b604080516001600160a01b0390921660208301908152828201939093528152614cae606082613fa2565b51902090565b906001600160701b03809116911601906001600160701b03821161456857565b614bfa906001600160701b036060816020840151169201511690614cb4565b614bfa906001600160701b036080816040840151169201511690614cb4565b8015614e5257614de06001825f908460801c80614e46575b508060401c80614e39575b508060201c80614e2c575b508060101c80614e1f575b508060081c80614e12575b508060041c80614e05575b508060021c80614df8575b50821c614df1575b811c1b614d818184614ac5565b0160011c614d8f8184614ac5565b0160011c614d9d8184614ac5565b0160011c614dab8184614ac5565b0160011c614db98184614ac5565b0160011c614dc78184614ac5565b0160011c614dd58184614ac5565b0160011c8092614ac5565b80821015614dec575090565b905090565b8101614d74565b600291509101905f614d6c565b600491509101905f614d61565b600891509101905f614d56565b601091509101905f614d4b565b602091509101905f614d40565b604091509101905f614d35565b9150506080905f614d2a565b505f90565b905f602091828151910182855af11561373d575f513d614ea657506001600160a01b0381163b155b614e865750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415614e7f56fe43473e5e46598b12a9d6961219fd5cf4e66ec4f6653d7206553a25c454687c8e1d9d1025f06575cd23c8334c2f057422670381e5e2513b4a4bd6ecc63f649d4fa26469706673582212203356640754711ac5afeda756a322ebb2e56a7db1efaf8c3239977b7c143f134e64736f6c634300081a0033";

type PairPoolManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PairPoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PairPoolManager__factory extends ContractFactory {
  constructor(...args: PairPoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _manager: AddressLike,
    _mirrorTokenManager: AddressLike,
    _lendingPoolManager: AddressLike,
    _marginLiquidity: AddressLike,
    _marginFees: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _manager,
      _mirrorTokenManager,
      _lendingPoolManager,
      _marginLiquidity,
      _marginFees,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _manager: AddressLike,
    _mirrorTokenManager: AddressLike,
    _lendingPoolManager: AddressLike,
    _marginLiquidity: AddressLike,
    _marginFees: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      _manager,
      _mirrorTokenManager,
      _lendingPoolManager,
      _marginLiquidity,
      _marginFees,
      overrides || {}
    ) as Promise<
      PairPoolManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PairPoolManager__factory {
    return super.connect(runner) as PairPoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PairPoolManagerInterface {
    return new Interface(_abi) as PairPoolManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PairPoolManager {
    return new Contract(address, _abi, runner) as unknown as PairPoolManager;
  }
}
